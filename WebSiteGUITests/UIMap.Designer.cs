// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace WebSiteGUITests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AssertFifthStop - Use 'AssertFifthStopExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertFifthStop()
        {
            #region Variable Declarations
            HtmlCustom uIFifthOutCustom = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIFifthOutCustom;
            #endregion

            // Verify that the 'InnerText' property of 'fifthOut' custom control equals 'tel aviv-yafo, israel'
            Assert.AreEqual(this.AssertFifthStopExpectedValues.UIFifthOutCustomInnerText, uIFifthOutCustom.InnerText);
        }
        
        /// <summary>
        /// AssertFirstStop - Use 'AssertFirstStopExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertFirstStop()
        {
            #region Variable Declarations
            HtmlCustom uIFirsOutCustom = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIFirsOutCustom;
            #endregion

            // Verify that the 'InnerText' property of 'firsOut' custom control equals 'tel aviv-yafo, israel'
            Assert.AreEqual(this.AssertFirstStopExpectedValues.UIFirsOutCustomInnerText, uIFirsOutCustom.InnerText);
        }
        
        /// <summary>
        /// AssertFourthStop - Use 'AssertFourthStopExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertFourthStop()
        {
            #region Variable Declarations
            HtmlCustom uIFourthOutCustom = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIFourthOutCustom;
            #endregion

            // Verify that the 'InnerText' property of 'fourthOut' custom control equals 'tel aviv-yafo, israel'
            Assert.AreEqual(this.AssertFourthStopExpectedValues.UIFourthOutCustomInnerText, uIFourthOutCustom.InnerText);
        }
        
        /// <summary>
        /// AssertPage - Use 'AssertPageExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertPage()
        {
            #region Variable Declarations
            HtmlCustom uIAHomeCustom = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIAHomeCustom;
            HtmlCustom uIASearchRideCustom1 = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIASearchRideCustom1;
            HtmlCustom uIAPublishRideCustom = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIAPublishRideCustom;
            HtmlCustom uIAPostRequestCustom1 = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIAPostRequestCustom1;
            HtmlCustom uIAMyRidesCustom = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIAMyRidesCustom;
            HtmlDiv uIHomePane = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIHomePane;
            HtmlDiv uIMyRidesPane = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIMyRidesPane;
            HtmlDiv uISearchRidePane = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UISearchRidePane;
            HtmlDiv uIPostRequestPane = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIPostRequestPane;
            HtmlDiv uIPublishRidePane = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIPublishRidePane;
            #endregion

            // Verify that the 'ControlDefinition' property of 'aHome' custom control equals 'id="aHome" style="color: rgb(237, 192, 56);" onclick="updateCurrentPage(pages.home)"'
            Assert.AreEqual(this.AssertPageExpectedValues.UIAHomeCustomControlDefinition, uIAHomeCustom.ControlDefinition);

            // Verify that the 'ControlDefinition' property of 'aSearchRide' custom control equals 'id="aSearchRide" style="color: white;" onclick="updateCurrentPage(pages.searchRides)"'
            Assert.AreEqual(this.AssertPageExpectedValues.UIASearchRideCustom1ControlDefinition, uIASearchRideCustom1.ControlDefinition);

            // Verify that the 'ControlDefinition' property of 'aPublishRide' custom control equals 'id="aPublishRide" style="color: white;" onclick="updateCurrentPage(pages.publishRide)"'
            Assert.AreEqual(this.AssertPageExpectedValues.UIAPublishRideCustomControlDefinition, uIAPublishRideCustom.ControlDefinition);

            // Verify that the 'ControlDefinition' property of 'aPostRequest' custom control equals 'id="aPostRequest" style="color: white;" onclick="updateCurrentPage(pages.postRequest)"'
            Assert.AreEqual(this.AssertPageExpectedValues.UIAPostRequestCustom1ControlDefinition, uIAPostRequestCustom1.ControlDefinition);

            // Verify that the 'ControlDefinition' property of 'aMyRides' custom control equals 'id="aMyRides" style="color: white;" onclick="updateCurrentPage(pages.myRides)"'
            Assert.AreEqual(this.AssertPageExpectedValues.UIAMyRidesCustomControlDefinition, uIAMyRidesCustom.ControlDefinition);

            // Verify that the 'ControlDefinition' property of 'home' pane equals 'class="mainContent" id="home" style="display: block;"'
            Assert.AreEqual(this.AssertPageExpectedValues.UIHomePaneControlDefinition, uIHomePane.ControlDefinition);

            // Verify that the 'ControlDefinition' property of 'myRides' pane equals 'class="mainContent" id="myRides" style="display: none;"'
            Assert.AreEqual(this.AssertPageExpectedValues.UIMyRidesPaneControlDefinition, uIMyRidesPane.ControlDefinition);

            // Verify that the 'ControlDefinition' property of 'searchRide' pane equals 'class="mainContent" id="searchRide" style="display: none;"'
            Assert.AreEqual(this.AssertPageExpectedValues.UISearchRidePaneControlDefinition, uISearchRidePane.ControlDefinition);

            // Verify that the 'ControlDefinition' property of 'postRequest' pane equals 'class="mainContent container" id="postRequest" style="display: none;"'
            Assert.AreEqual(this.AssertPageExpectedValues.UIPostRequestPaneControlDefinition, uIPostRequestPane.ControlDefinition);

            // Verify that the 'ControlDefinition' property of 'publishRide' pane equals 'class="mainContent container" id="publishRide" style="display: none;"'
            Assert.AreEqual(this.AssertPageExpectedValues.UIPublishRidePaneControlDefinition, uIPublishRidePane.ControlDefinition);
        }
        
        /// <summary>
        /// AssertPopupMessage - Use 'AssertPopupMessageExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertPopupMessage()
        {
            #region Variable Declarations
            HtmlDiv uIWrongemailorpasswordPane = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIWrongemailorpasswordPane;
            #endregion

            // Verify that the 'InnerText' property of 'Wrong email or password!' pane equals ''
            Assert.AreEqual(this.AssertPopupMessageExpectedValues.UIWrongemailorpasswordPaneInnerText, uIWrongemailorpasswordPane.InnerText, "Wrong Popup Message");
        }
        
        /// <summary>
        /// AssertRegisterPanel - Use 'AssertRegisterPanelExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertRegisterPanel()
        {
            #region Variable Declarations
            HtmlDiv uIRegisterContentPane = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIRegisterContentPane;
            HtmlEdit uIRegFNameEdit = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIRegFNameEdit;
            HtmlEdit uIRegLNameEdit = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIRegLNameEdit;
            HtmlEdit uIRegEmailEdit = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIRegEmailEdit;
            HtmlEdit uIRegPhoneEdit = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIRegPhoneEdit;
            HtmlEdit uIRegPassEdit = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIRegPassEdit;
            HtmlEdit uIRegVerPassEdit = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIRegVerPassEdit;
            HtmlInputButton uIRegisterButton = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIRegisterContentPane.UIRegisterButton;
            #endregion

            // Verify that the 'Exists' property of 'registerContent' pane equals 'True'
            Assert.AreEqual(this.AssertRegisterPanelExpectedValues.UIRegisterContentPaneExists, uIRegisterContentPane.Exists);

            // Verify that the 'Enabled' property of 'registerContent' pane equals 'True'
            Assert.AreEqual(this.AssertRegisterPanelExpectedValues.UIRegisterContentPaneEnabled, uIRegisterContentPane.Enabled);

            // Verify that the 'InnerText' property of 'registerContent' pane equals 'First Name:  
            //
            //Last Name:  
            //
            //Email:  
            //
            //Phone Number:  
            //
            //Password:  
            //
            //Verify Password:  '
            Assert.AreEqual(this.AssertRegisterPanelExpectedValues.UIRegisterContentPaneInnerText, uIRegisterContentPane.InnerText);

            // Verify that the 'Exists' property of 'regFName' text box equals 'True'
            Assert.AreEqual(this.AssertRegisterPanelExpectedValues.UIRegFNameEditExists, uIRegFNameEdit.Exists);

            // Verify that the 'Enabled' property of 'regFName' text box equals 'True'
            Assert.AreEqual(this.AssertRegisterPanelExpectedValues.UIRegFNameEditEnabled, uIRegFNameEdit.Enabled);

            // Verify that the 'Exists' property of 'regLName' text box equals 'True'
            Assert.AreEqual(this.AssertRegisterPanelExpectedValues.UIRegLNameEditExists, uIRegLNameEdit.Exists);

            // Verify that the 'Enabled' property of 'regLName' text box equals 'True'
            Assert.AreEqual(this.AssertRegisterPanelExpectedValues.UIRegLNameEditEnabled, uIRegLNameEdit.Enabled);

            // Verify that the 'Exists' property of 'regEmail' text box equals 'True'
            Assert.AreEqual(this.AssertRegisterPanelExpectedValues.UIRegEmailEditExists, uIRegEmailEdit.Exists);

            // Verify that the 'Enabled' property of 'regEmail' text box equals 'True'
            Assert.AreEqual(this.AssertRegisterPanelExpectedValues.UIRegEmailEditEnabled, uIRegEmailEdit.Enabled);

            // Verify that the 'Exists' property of 'regPhone' text box equals 'True'
            Assert.AreEqual(this.AssertRegisterPanelExpectedValues.UIRegPhoneEditExists, uIRegPhoneEdit.Exists);

            // Verify that the 'Enabled' property of 'regPhone' text box equals 'True'
            Assert.AreEqual(this.AssertRegisterPanelExpectedValues.UIRegPhoneEditEnabled, uIRegPhoneEdit.Enabled);

            // Verify that the 'Exists' property of 'regPass' text box equals 'True'
            Assert.AreEqual(this.AssertRegisterPanelExpectedValues.UIRegPassEditExists, uIRegPassEdit.Exists);

            // Verify that the 'Enabled' property of 'regPass' text box equals 'True'
            Assert.AreEqual(this.AssertRegisterPanelExpectedValues.UIRegPassEditEnabled, uIRegPassEdit.Enabled);

            // Verify that the 'Exists' property of 'regVerPass' text box equals 'True'
            Assert.AreEqual(this.AssertRegisterPanelExpectedValues.UIRegVerPassEditExists, uIRegVerPassEdit.Exists);

            // Verify that the 'Enabled' property of 'regVerPass' text box equals 'True'
            Assert.AreEqual(this.AssertRegisterPanelExpectedValues.UIRegVerPassEditEnabled, uIRegVerPassEdit.Enabled);

            // Verify that the 'Exists' property of 'Register' button equals 'True'
            Assert.AreEqual(this.AssertRegisterPanelExpectedValues.UIRegisterButtonExists, uIRegisterButton.Exists);

            // Verify that the 'Enabled' property of 'Register' button equals 'True'
            Assert.AreEqual(this.AssertRegisterPanelExpectedValues.UIRegisterButtonEnabled, uIRegisterButton.Enabled);
        }
        
        /// <summary>
        /// AssertSecondStop - Use 'AssertSecondStopExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertSecondStop()
        {
            #region Variable Declarations
            HtmlCustom uISecondOutCustom = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UISecondOutCustom;
            #endregion

            // Verify that the 'InnerText' property of 'secondOut' custom control equals 'tel aviv-yafo, israel'
            Assert.AreEqual(this.AssertSecondStopExpectedValues.UISecondOutCustomInnerText, uISecondOutCustom.InnerText);
        }
        
        /// <summary>
        /// AssertThirdStop - Use 'AssertThirdStopExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertThirdStop()
        {
            #region Variable Declarations
            HtmlCustom uIThirdOutCustom = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIThirdOutCustom;
            #endregion

            // Verify that the 'InnerText' property of 'thirdOut' custom control equals 'tel aviv-yafo, israel'
            Assert.AreEqual(this.AssertThirdStopExpectedValues.UIThirdOutCustomInnerText, uIThirdOutCustom.InnerText);
        }
        
        /// <summary>
        /// AssertUserEmail - Use 'AssertUserEmailExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertUserEmail()
        {
            #region Variable Declarations
            HtmlSpan uIP1postbguacilPane = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIEmailCustom.UIP1postbguacilPane;
            #endregion

            // Verify that the 'InnerText' property of 'p1@post.bgu.ac.il' pane equals ''
            Assert.AreEqual(this.AssertUserEmailExpectedValues.UIP1postbguacilPaneInnerText, uIP1postbguacilPane.InnerText, "Wrong User Information After Login");
        }
        
        /// <summary>
        /// CloseAllTabs
        /// </summary>
        public void CloseAllTabs()
        {
            #region Variable Declarations
            WinButton uIClosealltabsButton = this.UIInternetExplorerWindow.UIClosealltabsWindow.UIClosealltabsButton;
            #endregion

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Click 'Close all &tabs' button
            Mouse.Click(uIClosealltabsButton, new Point(80, 11));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;
        }
        
        /// <summary>
        /// CloseInternetExplorer
        /// </summary>
        public void CloseInternetExplorer()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UIRideShareWindowsInteWindow.UIRideShareWindowsInteTitleBar.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(25, 7));
        }
        
        /// <summary>
        /// ClosePopup
        /// </summary>
        public void ClosePopup()
        {
            #region Variable Declarations
            HtmlDiv uIWrongemailorpasswordPane1 = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIWrongemailorpasswordPane1;
            #endregion

            // Click 'Wrong email or password!' pane
            Mouse.Click(uIWrongemailorpasswordPane1, new Point(608, 724));
        }
        
        /// <summary>
        /// DeleteFifthStop
        /// </summary>
        public void DeleteFifthStop()
        {
            #region Variable Declarations
            HtmlInputButton uIXButton = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIXButton;
            #endregion

            // Click 'X' button
            Mouse.Click(uIXButton, new Point(9, 10));
        }
        
        /// <summary>
        /// DeleteFirstStop
        /// </summary>
        public void DeleteFirstStop()
        {
            #region Variable Declarations
            HtmlInputButton uIXButton4 = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIXButton4;
            #endregion

            // Click 'X' button
            Mouse.Click(uIXButton4, new Point(13, 13));
        }
        
        /// <summary>
        /// DeleteFourthStop
        /// </summary>
        public void DeleteFourthStop()
        {
            #region Variable Declarations
            HtmlInputButton uIXButton1 = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIXButton1;
            #endregion

            // Click 'X' button
            Mouse.Click(uIXButton1, new Point(8, 9));
        }
        
        /// <summary>
        /// DeleteSecondStop
        /// </summary>
        public void DeleteSecondStop()
        {
            #region Variable Declarations
            HtmlInputButton uIXButton3 = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIXButton3;
            #endregion

            // Click 'X' button
            Mouse.Click(uIXButton3, new Point(7, 12));
        }
        
        /// <summary>
        /// DeleteThirdStop
        /// </summary>
        public void DeleteThirdStop()
        {
            #region Variable Declarations
            HtmlInputButton uIXButton2 = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIXButton2;
            #endregion

            // Click 'X' button
            Mouse.Click(uIXButton2, new Point(5, 10));
        }
        
        /// <summary>
        /// GoToHome
        /// </summary>
        public void GoToHome()
        {
            #region Variable Declarations
            HtmlCustom uIAHomeCustom1 = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIAHomeCustom1;
            #endregion

            // Click 'aHome' custom control
            Mouse.Click(uIAHomeCustom1, new Point(93, 13));
        }
        
        /// <summary>
        /// GoToMyRides
        /// </summary>
        public void GoToMyRides()
        {
            #region Variable Declarations
            HtmlCustom uIAMyRidesCustom = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIAMyRidesCustom;
            #endregion

            // Click 'aMyRides' custom control
            Mouse.Click(uIAMyRidesCustom, new Point(96, 8));
        }
        
        /// <summary>
        /// GoToPostRequest
        /// </summary>
        public void GoToPostRequest()
        {
            #region Variable Declarations
            HtmlCustom uIAPostRequestCustom1 = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIAPostRequestCustom1;
            #endregion

            // Click 'aPostRequest' custom control
            Mouse.Click(uIAPostRequestCustom1, new Point(123, 17));
        }
        
        /// <summary>
        /// GoToPublishRide
        /// </summary>
        public void GoToPublishRide()
        {
            #region Variable Declarations
            HtmlCustom uIAPublishRideCustom = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIAPublishRideCustom;
            #endregion

            // Click 'aPublishRide' custom control
            Mouse.Click(uIAPublishRideCustom, new Point(114, 7));
        }
        
        /// <summary>
        /// GoToSearchRide
        /// </summary>
        public void GoToSearchRide()
        {
            #region Variable Declarations
            HtmlCustom uIASearchRideCustom1 = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIASearchRideCustom1;
            #endregion

            // Click 'aSearchRide' custom control
            Mouse.Click(uIASearchRideCustom1, new Point(116, 6));
        }
        
        /// <summary>
        /// Login - Use 'LoginParams' to pass parameters into this method.
        /// </summary>
        public void Login()
        {
            #region Variable Declarations
            HtmlEdit uILoginEmailEdit = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UILoginEmailEdit;
            HtmlEdit uILoginPassEdit = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UILoginPassEdit;
            HtmlInputButton uILoginButton = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UILoginButton;
            #endregion

            // Type 't' in 'loginEmail' text box
            uILoginEmailEdit.Text = this.LoginParams.UILoginEmailEditText;

            // Type '********' in 'loginPass' text box
            uILoginPassEdit.Password = this.LoginParams.UILoginPassEditPassword;

            // Click 'Login' button
            Mouse.Click(uILoginButton, new Point(54, 21));
        }
        
        /// <summary>
        /// Logout
        /// </summary>
        public void Logout()
        {
            #region Variable Declarations
            HtmlInputButton uILogoutButton = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UILogoutButton;
            #endregion

            // Click 'Logout' button
            Mouse.Click(uILogoutButton, new Point(51, 8));
        }
        
        /// <summary>
        /// OpenRegisterPanel
        /// </summary>
        public void OpenRegisterPanel()
        {
            #region Variable Declarations
            HtmlInputButton uIRegisterButton = this.UIRideShareWindowsInteWindow.UIRideShareDocument.UIRegisterButton;
            #endregion

            // Click 'Register' button
            Mouse.Click(uIRegisterButton, new Point(126, 11));
        }
        
        /// <summary>
        /// StartRideShare - Use 'StartRideShareParams' to pass parameters into this method.
        /// </summary>
        public void StartRideShare()
        {
            #region Variable Declarations
            WinComboBox uIOpenComboBox = this.UIRunWindow.UIItemWindow.UIOpenComboBox;
            WinEdit uIOpenEdit = this.UIRunWindow.UIItemWindow1.UIOpenEdit;
            BrowserWindow uIBlankPageWindowsInteWindow = this.UIBlankPageWindowsInteWindow;
            #endregion

            // Press keyboard shortcut keys 'Windows + r'
            Keyboard.SendKeys(this.StartRideShareParams.SendKeys, ModifierKeys.Windows);

            // Select 'iexplore' in 'Open:' combo box
            uIOpenComboBox.EditableItem = this.StartRideShareParams.UIOpenComboBoxEditableItem;

            // Type '{Enter}' in 'Open:' text box
            Keyboard.SendKeys(uIOpenEdit, this.StartRideShareParams.UIOpenEditSendKeys, ModifierKeys.None);

            // Go to web page 'http://rideshare-server.herokuapp.com/'
            uIBlankPageWindowsInteWindow.NavigateToUrl(new System.Uri(this.StartRideShareParams.UIBlankPageWindowsInteWindowUrl));
        }
        
        #region Properties
        public virtual AssertFifthStopExpectedValues AssertFifthStopExpectedValues
        {
            get
            {
                if ((this.mAssertFifthStopExpectedValues == null))
                {
                    this.mAssertFifthStopExpectedValues = new AssertFifthStopExpectedValues();
                }
                return this.mAssertFifthStopExpectedValues;
            }
        }
        
        public virtual AssertFirstStopExpectedValues AssertFirstStopExpectedValues
        {
            get
            {
                if ((this.mAssertFirstStopExpectedValues == null))
                {
                    this.mAssertFirstStopExpectedValues = new AssertFirstStopExpectedValues();
                }
                return this.mAssertFirstStopExpectedValues;
            }
        }
        
        public virtual AssertFourthStopExpectedValues AssertFourthStopExpectedValues
        {
            get
            {
                if ((this.mAssertFourthStopExpectedValues == null))
                {
                    this.mAssertFourthStopExpectedValues = new AssertFourthStopExpectedValues();
                }
                return this.mAssertFourthStopExpectedValues;
            }
        }
        
        public virtual AssertPageExpectedValues AssertPageExpectedValues
        {
            get
            {
                if ((this.mAssertPageExpectedValues == null))
                {
                    this.mAssertPageExpectedValues = new AssertPageExpectedValues();
                }
                return this.mAssertPageExpectedValues;
            }
        }
        
        public virtual AssertPopupMessageExpectedValues AssertPopupMessageExpectedValues
        {
            get
            {
                if ((this.mAssertPopupMessageExpectedValues == null))
                {
                    this.mAssertPopupMessageExpectedValues = new AssertPopupMessageExpectedValues();
                }
                return this.mAssertPopupMessageExpectedValues;
            }
        }
        
        public virtual AssertRegisterPanelExpectedValues AssertRegisterPanelExpectedValues
        {
            get
            {
                if ((this.mAssertRegisterPanelExpectedValues == null))
                {
                    this.mAssertRegisterPanelExpectedValues = new AssertRegisterPanelExpectedValues();
                }
                return this.mAssertRegisterPanelExpectedValues;
            }
        }
        
        public virtual AssertSecondStopExpectedValues AssertSecondStopExpectedValues
        {
            get
            {
                if ((this.mAssertSecondStopExpectedValues == null))
                {
                    this.mAssertSecondStopExpectedValues = new AssertSecondStopExpectedValues();
                }
                return this.mAssertSecondStopExpectedValues;
            }
        }
        
        public virtual AssertThirdStopExpectedValues AssertThirdStopExpectedValues
        {
            get
            {
                if ((this.mAssertThirdStopExpectedValues == null))
                {
                    this.mAssertThirdStopExpectedValues = new AssertThirdStopExpectedValues();
                }
                return this.mAssertThirdStopExpectedValues;
            }
        }
        
        public virtual AssertUserEmailExpectedValues AssertUserEmailExpectedValues
        {
            get
            {
                if ((this.mAssertUserEmailExpectedValues == null))
                {
                    this.mAssertUserEmailExpectedValues = new AssertUserEmailExpectedValues();
                }
                return this.mAssertUserEmailExpectedValues;
            }
        }
        
        public virtual LoginParams LoginParams
        {
            get
            {
                if ((this.mLoginParams == null))
                {
                    this.mLoginParams = new LoginParams();
                }
                return this.mLoginParams;
            }
        }
        
        public virtual StartRideShareParams StartRideShareParams
        {
            get
            {
                if ((this.mStartRideShareParams == null))
                {
                    this.mStartRideShareParams = new StartRideShareParams();
                }
                return this.mStartRideShareParams;
            }
        }
        
        public UIRideShareWindowsInteWindow UIRideShareWindowsInteWindow
        {
            get
            {
                if ((this.mUIRideShareWindowsInteWindow == null))
                {
                    this.mUIRideShareWindowsInteWindow = new UIRideShareWindowsInteWindow();
                }
                return this.mUIRideShareWindowsInteWindow;
            }
        }
        
        public UIRunWindow UIRunWindow
        {
            get
            {
                if ((this.mUIRunWindow == null))
                {
                    this.mUIRunWindow = new UIRunWindow();
                }
                return this.mUIRunWindow;
            }
        }
        
        public UIBlankPageWindowsInteWindow UIBlankPageWindowsInteWindow
        {
            get
            {
                if ((this.mUIBlankPageWindowsInteWindow == null))
                {
                    this.mUIBlankPageWindowsInteWindow = new UIBlankPageWindowsInteWindow();
                }
                return this.mUIBlankPageWindowsInteWindow;
            }
        }
        
        public UIEditingCodedUITestsUWindow UIEditingCodedUITestsUWindow
        {
            get
            {
                if ((this.mUIEditingCodedUITestsUWindow == null))
                {
                    this.mUIEditingCodedUITestsUWindow = new UIEditingCodedUITestsUWindow();
                }
                return this.mUIEditingCodedUITestsUWindow;
            }
        }
        
        public UIInternetExplorerWindow UIInternetExplorerWindow
        {
            get
            {
                if ((this.mUIInternetExplorerWindow == null))
                {
                    this.mUIInternetExplorerWindow = new UIInternetExplorerWindow();
                }
                return this.mUIInternetExplorerWindow;
            }
        }
        
        public UIRideShareGoogleChromWindow UIRideShareGoogleChromWindow
        {
            get
            {
                if ((this.mUIRideShareGoogleChromWindow == null))
                {
                    this.mUIRideShareGoogleChromWindow = new UIRideShareGoogleChromWindow();
                }
                return this.mUIRideShareGoogleChromWindow;
            }
        }
        #endregion
        
        #region Fields
        private AssertFifthStopExpectedValues mAssertFifthStopExpectedValues;
        
        private AssertFirstStopExpectedValues mAssertFirstStopExpectedValues;
        
        private AssertFourthStopExpectedValues mAssertFourthStopExpectedValues;
        
        private AssertPageExpectedValues mAssertPageExpectedValues;
        
        private AssertPopupMessageExpectedValues mAssertPopupMessageExpectedValues;
        
        private AssertRegisterPanelExpectedValues mAssertRegisterPanelExpectedValues;
        
        private AssertSecondStopExpectedValues mAssertSecondStopExpectedValues;
        
        private AssertThirdStopExpectedValues mAssertThirdStopExpectedValues;
        
        private AssertUserEmailExpectedValues mAssertUserEmailExpectedValues;
        
        private LoginParams mLoginParams;
        
        private StartRideShareParams mStartRideShareParams;
        
        private UIRideShareWindowsInteWindow mUIRideShareWindowsInteWindow;
        
        private UIRunWindow mUIRunWindow;
        
        private UIBlankPageWindowsInteWindow mUIBlankPageWindowsInteWindow;
        
        private UIEditingCodedUITestsUWindow mUIEditingCodedUITestsUWindow;
        
        private UIInternetExplorerWindow mUIInternetExplorerWindow;
        
        private UIRideShareGoogleChromWindow mUIRideShareGoogleChromWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertFifthStop'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertFifthStopExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'fifthOut' custom control equals 'tel aviv-yafo, israel'
        /// </summary>
        public string UIFifthOutCustomInnerText = "tel aviv-yafo, israel";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertFirstStop'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertFirstStopExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'firsOut' custom control equals 'tel aviv-yafo, israel'
        /// </summary>
        public string UIFirsOutCustomInnerText = "tel aviv-yafo, israel";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertFourthStop'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertFourthStopExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'fourthOut' custom control equals 'tel aviv-yafo, israel'
        /// </summary>
        public string UIFourthOutCustomInnerText = "tel aviv-yafo, israel";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertPage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertPageExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlDefinition' property of 'aHome' custom control equals 'id="aHome" style="color: rgb(237, 192, 56);" onclick="updateCurrentPage(pages.home)"'
        /// </summary>
        public string UIAHomeCustomControlDefinition = "id=\"aHome\" style=\"color: rgb(237, 192, 56);\" onclick=\"updateCurrentPage(pages.hom" +
            "e)\"";
        
        /// <summary>
        /// Verify that the 'ControlDefinition' property of 'aSearchRide' custom control equals 'id="aSearchRide" style="color: white;" onclick="updateCurrentPage(pages.searchRides)"'
        /// </summary>
        public string UIASearchRideCustom1ControlDefinition = "id=\"aSearchRide\" style=\"color: white;\" onclick=\"updateCurrentPage(pages.searchRid" +
            "es)\"";
        
        /// <summary>
        /// Verify that the 'ControlDefinition' property of 'aPublishRide' custom control equals 'id="aPublishRide" style="color: white;" onclick="updateCurrentPage(pages.publishRide)"'
        /// </summary>
        public string UIAPublishRideCustomControlDefinition = "id=\"aPublishRide\" style=\"color: white;\" onclick=\"updateCurrentPage(pages.publishR" +
            "ide)\"";
        
        /// <summary>
        /// Verify that the 'ControlDefinition' property of 'aPostRequest' custom control equals 'id="aPostRequest" style="color: white;" onclick="updateCurrentPage(pages.postRequest)"'
        /// </summary>
        public string UIAPostRequestCustom1ControlDefinition = "id=\"aPostRequest\" style=\"color: white;\" onclick=\"updateCurrentPage(pages.postRequ" +
            "est)\"";
        
        /// <summary>
        /// Verify that the 'ControlDefinition' property of 'aMyRides' custom control equals 'id="aMyRides" style="color: white;" onclick="updateCurrentPage(pages.myRides)"'
        /// </summary>
        public string UIAMyRidesCustomControlDefinition = "id=\"aMyRides\" style=\"color: white;\" onclick=\"updateCurrentPage(pages.myRides)\"";
        
        /// <summary>
        /// Verify that the 'ControlDefinition' property of 'home' pane equals 'class="mainContent" id="home" style="display: block;"'
        /// </summary>
        public string UIHomePaneControlDefinition = "class=\"mainContent\" id=\"home\" style=\"display: block;\"";
        
        /// <summary>
        /// Verify that the 'ControlDefinition' property of 'myRides' pane equals 'class="mainContent" id="myRides" style="display: none;"'
        /// </summary>
        public string UIMyRidesPaneControlDefinition = "class=\"mainContent\" id=\"myRides\" style=\"display: none;\"";
        
        /// <summary>
        /// Verify that the 'ControlDefinition' property of 'searchRide' pane equals 'class="mainContent" id="searchRide" style="display: none;"'
        /// </summary>
        public string UISearchRidePaneControlDefinition = "class=\"mainContent\" id=\"searchRide\" style=\"display: none;\"";
        
        /// <summary>
        /// Verify that the 'ControlDefinition' property of 'postRequest' pane equals 'class="mainContent container" id="postRequest" style="display: none;"'
        /// </summary>
        public string UIPostRequestPaneControlDefinition = "class=\"mainContent container\" id=\"postRequest\" style=\"display: none;\"";
        
        /// <summary>
        /// Verify that the 'ControlDefinition' property of 'publishRide' pane equals 'class="mainContent container" id="publishRide" style="display: none;"'
        /// </summary>
        public string UIPublishRidePaneControlDefinition = "class=\"mainContent container\" id=\"publishRide\" style=\"display: none;\"";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertPopupMessage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertPopupMessageExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Wrong email or password!' pane equals ''
        /// </summary>
        public string UIWrongemailorpasswordPaneInnerText = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertRegisterPanel'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertRegisterPanelExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Exists' property of 'registerContent' pane equals 'True'
        /// </summary>
        public bool UIRegisterContentPaneExists = true;
        
        /// <summary>
        /// Verify that the 'Enabled' property of 'registerContent' pane equals 'True'
        /// </summary>
        public bool UIRegisterContentPaneEnabled = true;
        
        /// <summary>
        /// Verify that the 'InnerText' property of 'registerContent' pane equals 'First Name:  
        ///
        ///Last Name:  
        ///
        ///Email:  
        ///
        ///Phone Number:  
        ///
        ///Password:  
        ///
        ///Verify Password:  '
        /// </summary>
        public string UIRegisterContentPaneInnerText = "First Name:  \r\n\r\nLast Name:  \r\n\r\nEmail:  \r\n\r\nPhone Number:  \r\n\r\nPassword:  \r\n\r\nVe" +
            "rify Password:  ";
        
        /// <summary>
        /// Verify that the 'Exists' property of 'regFName' text box equals 'True'
        /// </summary>
        public bool UIRegFNameEditExists = true;
        
        /// <summary>
        /// Verify that the 'Enabled' property of 'regFName' text box equals 'True'
        /// </summary>
        public bool UIRegFNameEditEnabled = true;
        
        /// <summary>
        /// Verify that the 'Exists' property of 'regLName' text box equals 'True'
        /// </summary>
        public bool UIRegLNameEditExists = true;
        
        /// <summary>
        /// Verify that the 'Enabled' property of 'regLName' text box equals 'True'
        /// </summary>
        public bool UIRegLNameEditEnabled = true;
        
        /// <summary>
        /// Verify that the 'Exists' property of 'regEmail' text box equals 'True'
        /// </summary>
        public bool UIRegEmailEditExists = true;
        
        /// <summary>
        /// Verify that the 'Enabled' property of 'regEmail' text box equals 'True'
        /// </summary>
        public bool UIRegEmailEditEnabled = true;
        
        /// <summary>
        /// Verify that the 'Exists' property of 'regPhone' text box equals 'True'
        /// </summary>
        public bool UIRegPhoneEditExists = true;
        
        /// <summary>
        /// Verify that the 'Enabled' property of 'regPhone' text box equals 'True'
        /// </summary>
        public bool UIRegPhoneEditEnabled = true;
        
        /// <summary>
        /// Verify that the 'Exists' property of 'regPass' text box equals 'True'
        /// </summary>
        public bool UIRegPassEditExists = true;
        
        /// <summary>
        /// Verify that the 'Enabled' property of 'regPass' text box equals 'True'
        /// </summary>
        public bool UIRegPassEditEnabled = true;
        
        /// <summary>
        /// Verify that the 'Exists' property of 'regVerPass' text box equals 'True'
        /// </summary>
        public bool UIRegVerPassEditExists = true;
        
        /// <summary>
        /// Verify that the 'Enabled' property of 'regVerPass' text box equals 'True'
        /// </summary>
        public bool UIRegVerPassEditEnabled = true;
        
        /// <summary>
        /// Verify that the 'Exists' property of 'Register' button equals 'True'
        /// </summary>
        public bool UIRegisterButtonExists = true;
        
        /// <summary>
        /// Verify that the 'Enabled' property of 'Register' button equals 'True'
        /// </summary>
        public bool UIRegisterButtonEnabled = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertSecondStop'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertSecondStopExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'secondOut' custom control equals 'tel aviv-yafo, israel'
        /// </summary>
        public string UISecondOutCustomInnerText = "tel aviv-yafo, israel";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertThirdStop'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertThirdStopExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'thirdOut' custom control equals 'tel aviv-yafo, israel'
        /// </summary>
        public string UIThirdOutCustomInnerText = "tel aviv-yafo, israel";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertUserEmail'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertUserEmailExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'p1@post.bgu.ac.il' pane equals ''
        /// </summary>
        public string UIP1postbguacilPaneInnerText = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Login'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class LoginParams
    {
        
        #region Fields
        /// <summary>
        /// Type 't' in 'loginEmail' text box
        /// </summary>
        public string UILoginEmailEditText = "t";
        
        /// <summary>
        /// Type '********' in 'loginPass' text box
        /// </summary>
        public string UILoginPassEditPassword = "2Oxm3dAuzpTO5Npam0fkew==";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'StartRideShare'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class StartRideShareParams
    {
        
        #region Fields
        /// <summary>
        /// Press keyboard shortcut keys 'Windows + r'
        /// </summary>
        public string SendKeys = "r";
        
        /// <summary>
        /// Select 'iexplore' in 'Open:' combo box
        /// </summary>
        public string UIOpenComboBoxEditableItem = "iexplore";
        
        /// <summary>
        /// Type '{Enter}' in 'Open:' text box
        /// </summary>
        public string UIOpenEditSendKeys = "{Enter}";
        
        /// <summary>
        /// Go to web page 'http://rideshare-server.herokuapp.com/'
        /// </summary>
        public string UIBlankPageWindowsInteWindowUrl = "http://rideshare-server.herokuapp.com/";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRideShareWindowsInteWindow : BrowserWindow
    {
        
        public UIRideShareWindowsInteWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "RideShare";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("RideShare");
            this.WindowTitles.Add("New Tab");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIRideShareDocument UIRideShareDocument
        {
            get
            {
                if ((this.mUIRideShareDocument == null))
                {
                    this.mUIRideShareDocument = new UIRideShareDocument(this);
                }
                return this.mUIRideShareDocument;
            }
        }
        
        public UIRideShareWindowsInteTitleBar UIRideShareWindowsInteTitleBar
        {
            get
            {
                if ((this.mUIRideShareWindowsInteTitleBar == null))
                {
                    this.mUIRideShareWindowsInteTitleBar = new UIRideShareWindowsInteTitleBar(this);
                }
                return this.mUIRideShareWindowsInteTitleBar;
            }
        }
        
        public UITabRowTabList UITabRowTabList
        {
            get
            {
                if ((this.mUITabRowTabList == null))
                {
                    this.mUITabRowTabList = new UITabRowTabList(this);
                }
                return this.mUITabRowTabList;
            }
        }
        
        public UIAddressBarClient UIAddressBarClient
        {
            get
            {
                if ((this.mUIAddressBarClient == null))
                {
                    this.mUIAddressBarClient = new UIAddressBarClient(this);
                }
                return this.mUIAddressBarClient;
            }
        }
        
        public UIAddressComboControlToolBar UIAddressComboControlToolBar
        {
            get
            {
                if ((this.mUIAddressComboControlToolBar == null))
                {
                    this.mUIAddressComboControlToolBar = new UIAddressComboControlToolBar(this);
                }
                return this.mUIAddressComboControlToolBar;
            }
        }
        #endregion
        
        #region Fields
        private UIRideShareDocument mUIRideShareDocument;
        
        private UIRideShareWindowsInteTitleBar mUIRideShareWindowsInteTitleBar;
        
        private UITabRowTabList mUITabRowTabList;
        
        private UIAddressBarClient mUIAddressBarClient;
        
        private UIAddressComboControlToolBar mUIAddressComboControlToolBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRideShareDocument : HtmlDocument
    {
        
        public UIRideShareDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "RideShare";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://rideshare-server.herokuapp.com/";
            this.WindowTitles.Add("RideShare");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UILoginEmailEdit
        {
            get
            {
                if ((this.mUILoginEmailEdit == null))
                {
                    this.mUILoginEmailEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUILoginEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "loginEmail";
                    this.mUILoginEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUILoginEmailEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUILoginEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUILoginEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUILoginEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "loginTxt";
                    this.mUILoginEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"loginTxt\" id=\"loginEmail\" type=\"e";
                    this.mUILoginEmailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "9";
                    this.mUILoginEmailEdit.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUILoginEmailEdit;
            }
        }
        
        public HtmlEdit UILoginPassEdit
        {
            get
            {
                if ((this.mUILoginPassEdit == null))
                {
                    this.mUILoginPassEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUILoginPassEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "loginPass";
                    this.mUILoginPassEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUILoginPassEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUILoginPassEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUILoginPassEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUILoginPassEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "loginTxt";
                    this.mUILoginPassEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"loginTxt\" id=\"loginPass\" type=\"pa";
                    this.mUILoginPassEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "10";
                    this.mUILoginPassEdit.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUILoginPassEdit;
            }
        }
        
        public HtmlInputButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Id] = "loginBtn";
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Login";
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Class] = "button btn";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"button btn\" id=\"loginBtn\" onclick";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "11";
                    this.mUILoginButton.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        
        public HtmlDiv UIWrongemailorpasswordPane
        {
            get
            {
                if ((this.mUIWrongemailorpasswordPane == null))
                {
                    this.mUIWrongemailorpasswordPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIWrongemailorpasswordPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "messageContent";
                    this.mUIWrongemailorpasswordPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIWrongemailorpasswordPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Wrong email or password!";
                    this.mUIWrongemailorpasswordPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIWrongemailorpasswordPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIWrongemailorpasswordPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"messageContent\" style=\"display: block;\"";
                    this.mUIWrongemailorpasswordPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "149";
                    this.mUIWrongemailorpasswordPane.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIWrongemailorpasswordPane;
            }
        }
        
        public HtmlDiv UILoginRegisterContainPane
        {
            get
            {
                if ((this.mUILoginRegisterContainPane == null))
                {
                    this.mUILoginRegisterContainPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUILoginRegisterContainPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "loginRegisterContainer";
                    this.mUILoginRegisterContainPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUILoginRegisterContainPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Register \r\n\r\n\r\nNew to RideShare ?\r\n\r\nGet";
                    this.mUILoginRegisterContainPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUILoginRegisterContainPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUILoginRegisterContainPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"loginRegisterContainer\"";
                    this.mUILoginRegisterContainPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUILoginRegisterContainPane.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUILoginRegisterContainPane;
            }
        }
        
        public UIEmailPasswordPane UIEmailPasswordPane
        {
            get
            {
                if ((this.mUIEmailPasswordPane == null))
                {
                    this.mUIEmailPasswordPane = new UIEmailPasswordPane(this);
                }
                return this.mUIEmailPasswordPane;
            }
        }
        
        public HtmlDiv UIWrongemailorpasswordPane1
        {
            get
            {
                if ((this.mUIWrongemailorpasswordPane1 == null))
                {
                    this.mUIWrongemailorpasswordPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIWrongemailorpasswordPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = "popup";
                    this.mUIWrongemailorpasswordPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIWrongemailorpasswordPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Wrong email or password!";
                    this.mUIWrongemailorpasswordPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIWrongemailorpasswordPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIWrongemailorpasswordPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"popup\" style=\"display: block;\"";
                    this.mUIWrongemailorpasswordPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "147";
                    this.mUIWrongemailorpasswordPane1.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIWrongemailorpasswordPane1;
            }
        }
        
        public HtmlInputButton UILogoutButton
        {
            get
            {
                if ((this.mUILogoutButton == null))
                {
                    this.mUILogoutButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUILogoutButton.SearchProperties[HtmlButton.PropertyNames.Id] = "btnLogout";
                    this.mUILogoutButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUILogoutButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Logout";
                    this.mUILogoutButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUILogoutButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILogoutButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn a";
                    this.mUILogoutButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn a\" id=\"btnLogout\" onclick=\"lo";
                    this.mUILogoutButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUILogoutButton.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUILogoutButton;
            }
        }
        
        public UIEmailCustom UIEmailCustom
        {
            get
            {
                if ((this.mUIEmailCustom == null))
                {
                    this.mUIEmailCustom = new UIEmailCustom(this);
                }
                return this.mUIEmailCustom;
            }
        }
        
        public HtmlCustom UILeftAsideCustom
        {
            get
            {
                if ((this.mUILeftAsideCustom == null))
                {
                    this.mUILeftAsideCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUILeftAsideCustom.SearchProperties["TagName"] = "ASIDE";
                    this.mUILeftAsideCustom.SearchProperties["Id"] = "leftAside";
                    this.mUILeftAsideCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUILeftAsideCustom.FilterProperties["Class"] = "container";
                    this.mUILeftAsideCustom.FilterProperties["ControlDefinition"] = "class=\"container\" id=\"leftAside\" style=\"";
                    this.mUILeftAsideCustom.FilterProperties["TagInstance"] = "1";
                    this.mUILeftAsideCustom.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUILeftAsideCustom;
            }
        }
        
        public HtmlDiv UIPromotionsPane
        {
            get
            {
                if ((this.mUIPromotionsPane == null))
                {
                    this.mUIPromotionsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPromotionsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "promotions";
                    this.mUIPromotionsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPromotionsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Top Drivers \r\n\r\n\r\n\r\n\r\nAvraham Ben Moshe\r";
                    this.mUIPromotionsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPromotionsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIPromotionsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"promotions\"";
                    this.mUIPromotionsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "140";
                    this.mUIPromotionsPane.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIPromotionsPane;
            }
        }
        
        public HtmlCustom UIAHomeCustom
        {
            get
            {
                if ((this.mUIAHomeCustom == null))
                {
                    this.mUIAHomeCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIAHomeCustom.SearchProperties["TagName"] = "A";
                    this.mUIAHomeCustom.SearchProperties["Id"] = "aHome";
                    this.mUIAHomeCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIAHomeCustom.FilterProperties["Class"] = null;
                    this.mUIAHomeCustom.FilterProperties["ControlDefinition"] = "id=\"aHome\" style=\"color: rgb(237, 192, 5";
                    this.mUIAHomeCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIAHomeCustom.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIAHomeCustom;
            }
        }
        
        public HtmlCustom UIASearchRideCustom
        {
            get
            {
                if ((this.mUIASearchRideCustom == null))
                {
                    this.mUIASearchRideCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIASearchRideCustom.SearchProperties["TagName"] = "A";
                    this.mUIASearchRideCustom.SearchProperties["Id"] = "aSearchRide";
                    this.mUIASearchRideCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIASearchRideCustom.FilterProperties["Class"] = null;
                    this.mUIASearchRideCustom.FilterProperties["ControlDefinition"] = "id=\"aSearchRide\" onclick=\"updateCurrentP";
                    this.mUIASearchRideCustom.FilterProperties["TagInstance"] = "2";
                    this.mUIASearchRideCustom.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIASearchRideCustom;
            }
        }
        
        public HtmlCustom UIAPublishRideCustom
        {
            get
            {
                if ((this.mUIAPublishRideCustom == null))
                {
                    this.mUIAPublishRideCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIAPublishRideCustom.SearchProperties["TagName"] = "A";
                    this.mUIAPublishRideCustom.SearchProperties["Id"] = "aPublishRide";
                    this.mUIAPublishRideCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIAPublishRideCustom.FilterProperties["Class"] = null;
                    this.mUIAPublishRideCustom.FilterProperties["ControlDefinition"] = "id=\"aPublishRide\" style=\"color: white;\" ";
                    this.mUIAPublishRideCustom.FilterProperties["TagInstance"] = "3";
                    this.mUIAPublishRideCustom.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIAPublishRideCustom;
            }
        }
        
        public HtmlCustom UIAPostRequestCustom
        {
            get
            {
                if ((this.mUIAPostRequestCustom == null))
                {
                    this.mUIAPostRequestCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIAPostRequestCustom.SearchProperties["TagName"] = "A";
                    this.mUIAPostRequestCustom.SearchProperties["Id"] = "aPostRequest";
                    this.mUIAPostRequestCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIAPostRequestCustom.FilterProperties["Class"] = null;
                    this.mUIAPostRequestCustom.FilterProperties["ControlDefinition"] = "id=\"aPostRequest\" onclick=\"updateCurrent";
                    this.mUIAPostRequestCustom.FilterProperties["TagInstance"] = "4";
                    this.mUIAPostRequestCustom.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIAPostRequestCustom;
            }
        }
        
        public HtmlCustom UIAMyRidesCustom
        {
            get
            {
                if ((this.mUIAMyRidesCustom == null))
                {
                    this.mUIAMyRidesCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIAMyRidesCustom.SearchProperties["TagName"] = "A";
                    this.mUIAMyRidesCustom.SearchProperties["Id"] = "aMyRides";
                    this.mUIAMyRidesCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIAMyRidesCustom.FilterProperties["Class"] = null;
                    this.mUIAMyRidesCustom.FilterProperties["ControlDefinition"] = "id=\"aMyRides\" style=\"color: white;\" oncl";
                    this.mUIAMyRidesCustom.FilterProperties["TagInstance"] = "5";
                    this.mUIAMyRidesCustom.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIAMyRidesCustom;
            }
        }
        
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "NAV";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = null;
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIItemCustom.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        
        public HtmlInputButton UIRegisterButton
        {
            get
            {
                if ((this.mUIRegisterButton == null))
                {
                    this.mUIRegisterButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIRegisterButton.SearchProperties[HtmlButton.PropertyNames.Id] = "regBtn";
                    this.mUIRegisterButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIRegisterButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Register";
                    this.mUIRegisterButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUIRegisterButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIRegisterButton.FilterProperties[HtmlButton.PropertyNames.Class] = "button btn";
                    this.mUIRegisterButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"button btn\" id=\"regBtn\" onclick=\"";
                    this.mUIRegisterButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUIRegisterButton.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIRegisterButton;
            }
        }
        
        public UIRegisterContentPane UIRegisterContentPane
        {
            get
            {
                if ((this.mUIRegisterContentPane == null))
                {
                    this.mUIRegisterContentPane = new UIRegisterContentPane(this);
                }
                return this.mUIRegisterContentPane;
            }
        }
        
        public HtmlEdit UIRegFNameEdit
        {
            get
            {
                if ((this.mUIRegFNameEdit == null))
                {
                    this.mUIRegFNameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIRegFNameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "regFName";
                    this.mUIRegFNameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIRegFNameEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIRegFNameEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIRegFNameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIRegFNameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "loginTxt";
                    this.mUIRegFNameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"loginTxt\" id=\"regFName\" type=\"tex";
                    this.mUIRegFNameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIRegFNameEdit.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIRegFNameEdit;
            }
        }
        
        public HtmlEdit UIRegLNameEdit
        {
            get
            {
                if ((this.mUIRegLNameEdit == null))
                {
                    this.mUIRegLNameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIRegLNameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "regLName";
                    this.mUIRegLNameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIRegLNameEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIRegLNameEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIRegLNameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIRegLNameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "loginTxt";
                    this.mUIRegLNameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"loginTxt\" id=\"regLName\" type=\"tex";
                    this.mUIRegLNameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUIRegLNameEdit.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIRegLNameEdit;
            }
        }
        
        public HtmlEdit UIRegEmailEdit
        {
            get
            {
                if ((this.mUIRegEmailEdit == null))
                {
                    this.mUIRegEmailEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIRegEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "regEmail";
                    this.mUIRegEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIRegEmailEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIRegEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIRegEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIRegEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "loginTxt";
                    this.mUIRegEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"loginTxt\" id=\"regEmail\" type=\"ema";
                    this.mUIRegEmailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "4";
                    this.mUIRegEmailEdit.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIRegEmailEdit;
            }
        }
        
        public HtmlEdit UIRegPhoneEdit
        {
            get
            {
                if ((this.mUIRegPhoneEdit == null))
                {
                    this.mUIRegPhoneEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIRegPhoneEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "regPhone";
                    this.mUIRegPhoneEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIRegPhoneEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIRegPhoneEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIRegPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIRegPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "loginTxt";
                    this.mUIRegPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"loginTxt\" id=\"regPhone\" type=\"tel";
                    this.mUIRegPhoneEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUIRegPhoneEdit.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIRegPhoneEdit;
            }
        }
        
        public HtmlEdit UIRegPassEdit
        {
            get
            {
                if ((this.mUIRegPassEdit == null))
                {
                    this.mUIRegPassEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIRegPassEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "regPass";
                    this.mUIRegPassEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIRegPassEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIRegPassEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIRegPassEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIRegPassEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "loginTxt";
                    this.mUIRegPassEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"loginTxt\" id=\"regPass\" type=\"pass";
                    this.mUIRegPassEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "6";
                    this.mUIRegPassEdit.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIRegPassEdit;
            }
        }
        
        public HtmlEdit UIRegVerPassEdit
        {
            get
            {
                if ((this.mUIRegVerPassEdit == null))
                {
                    this.mUIRegVerPassEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIRegVerPassEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "regVerPass";
                    this.mUIRegVerPassEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIRegVerPassEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIRegVerPassEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIRegVerPassEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIRegVerPassEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "loginTxt";
                    this.mUIRegVerPassEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"loginTxt\" id=\"regVerPass\" type=\"p";
                    this.mUIRegVerPassEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "7";
                    this.mUIRegVerPassEdit.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIRegVerPassEdit;
            }
        }
        
        public HtmlInputButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[HtmlButton.PropertyNames.Id] = "dialogYes";
                    this.mUIYesButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIYesButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Yes";
                    this.mUIYesButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUIYesButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIYesButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn control a";
                    this.mUIYesButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn control a\" id=\"dialogYes\" sty";
                    this.mUIYesButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "73";
                    this.mUIYesButton.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        
        public HtmlDiv UIAreYouSureAllDetailsPane
        {
            get
            {
                if ((this.mUIAreYouSureAllDetailsPane == null))
                {
                    this.mUIAreYouSureAllDetailsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIAreYouSureAllDetailsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "popup";
                    this.mUIAreYouSureAllDetailsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAreYouSureAllDetailsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Are You Sure All Details Correct?";
                    this.mUIAreYouSureAllDetailsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAreYouSureAllDetailsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIAreYouSureAllDetailsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"popup\" style=\"display: block;\"";
                    this.mUIAreYouSureAllDetailsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "147";
                    this.mUIAreYouSureAllDetailsPane.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIAreYouSureAllDetailsPane;
            }
        }
        
        public HtmlDiv UIAreYouSureAllDetailsPane1
        {
            get
            {
                if ((this.mUIAreYouSureAllDetailsPane1 == null))
                {
                    this.mUIAreYouSureAllDetailsPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIAreYouSureAllDetailsPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = "popup";
                    this.mUIAreYouSureAllDetailsPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAreYouSureAllDetailsPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Are You Sure All Details Correct?";
                    this.mUIAreYouSureAllDetailsPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAreYouSureAllDetailsPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIAreYouSureAllDetailsPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"popup\" style=\"display: block; opacity: 0.885257;\"";
                    this.mUIAreYouSureAllDetailsPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "147";
                    this.mUIAreYouSureAllDetailsPane1.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIAreYouSureAllDetailsPane1;
            }
        }
        
        public HtmlDiv UIAreYouSureAllDetailsPane2
        {
            get
            {
                if ((this.mUIAreYouSureAllDetailsPane2 == null))
                {
                    this.mUIAreYouSureAllDetailsPane2 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIAreYouSureAllDetailsPane2.SearchProperties[HtmlDiv.PropertyNames.Id] = "popup";
                    this.mUIAreYouSureAllDetailsPane2.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAreYouSureAllDetailsPane2.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Are You Sure All Details Correct?";
                    this.mUIAreYouSureAllDetailsPane2.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAreYouSureAllDetailsPane2.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIAreYouSureAllDetailsPane2.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"popup\" style=\"display: block; opacity: 0.996057;\"";
                    this.mUIAreYouSureAllDetailsPane2.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "147";
                    this.mUIAreYouSureAllDetailsPane2.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIAreYouSureAllDetailsPane2;
            }
        }
        
        public HtmlDiv UIAreYouSureAllDetailsPane3
        {
            get
            {
                if ((this.mUIAreYouSureAllDetailsPane3 == null))
                {
                    this.mUIAreYouSureAllDetailsPane3 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIAreYouSureAllDetailsPane3.SearchProperties[HtmlDiv.PropertyNames.Id] = "popup";
                    this.mUIAreYouSureAllDetailsPane3.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIAreYouSureAllDetailsPane3.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Are You Sure All Details Correct?";
                    this.mUIAreYouSureAllDetailsPane3.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIAreYouSureAllDetailsPane3.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIAreYouSureAllDetailsPane3.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"popup\" style=\"display: block; opacity: 0.593691;\"";
                    this.mUIAreYouSureAllDetailsPane3.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "147";
                    this.mUIAreYouSureAllDetailsPane3.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIAreYouSureAllDetailsPane3;
            }
        }
        
        public HtmlDiv UIMissingFieldsKeyemaiPane
        {
            get
            {
                if ((this.mUIMissingFieldsKeyemaiPane == null))
                {
                    this.mUIMissingFieldsKeyemaiPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIMissingFieldsKeyemaiPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "messageContent";
                    this.mUIMissingFieldsKeyemaiPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIMissingFieldsKeyemaiPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Missing Fields - Key: email";
                    this.mUIMissingFieldsKeyemaiPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIMissingFieldsKeyemaiPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIMissingFieldsKeyemaiPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"messageContent\" style=\"display: block;\"";
                    this.mUIMissingFieldsKeyemaiPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "149";
                    this.mUIMissingFieldsKeyemaiPane.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIMissingFieldsKeyemaiPane;
            }
        }
        
        public HtmlCustom UIASearchRideCustom1
        {
            get
            {
                if ((this.mUIASearchRideCustom1 == null))
                {
                    this.mUIASearchRideCustom1 = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIASearchRideCustom1.SearchProperties["TagName"] = "A";
                    this.mUIASearchRideCustom1.SearchProperties["Id"] = "aSearchRide";
                    this.mUIASearchRideCustom1.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIASearchRideCustom1.FilterProperties["Class"] = null;
                    this.mUIASearchRideCustom1.FilterProperties["ControlDefinition"] = "id=\"aSearchRide\" style=\"color: white;\" o";
                    this.mUIASearchRideCustom1.FilterProperties["TagInstance"] = "2";
                    this.mUIASearchRideCustom1.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIASearchRideCustom1;
            }
        }
        
        public HtmlCustom UIAPostRequestCustom1
        {
            get
            {
                if ((this.mUIAPostRequestCustom1 == null))
                {
                    this.mUIAPostRequestCustom1 = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIAPostRequestCustom1.SearchProperties["TagName"] = "A";
                    this.mUIAPostRequestCustom1.SearchProperties["Id"] = "aPostRequest";
                    this.mUIAPostRequestCustom1.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIAPostRequestCustom1.FilterProperties["Class"] = null;
                    this.mUIAPostRequestCustom1.FilterProperties["ControlDefinition"] = "id=\"aPostRequest\" style=\"color: white;\" ";
                    this.mUIAPostRequestCustom1.FilterProperties["TagInstance"] = "4";
                    this.mUIAPostRequestCustom1.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIAPostRequestCustom1;
            }
        }
        
        public HtmlDiv UIHomePane
        {
            get
            {
                if ((this.mUIHomePane == null))
                {
                    this.mUIHomePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIHomePane.SearchProperties[HtmlDiv.PropertyNames.Id] = "home";
                    this.mUIHomePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIHomePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Upcomming Rides \r\n\r\n\r\n\r\n\r\nNotifications ";
                    this.mUIHomePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIHomePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "mainContent";
                    this.mUIHomePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"mainContent\" id=\"home\" style=\"display: block;\"";
                    this.mUIHomePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "16";
                    this.mUIHomePane.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIHomePane;
            }
        }
        
        public HtmlDiv UIMyRidesPane
        {
            get
            {
                if ((this.mUIMyRidesPane == null))
                {
                    this.mUIMyRidesPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIMyRidesPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "myRides";
                    this.mUIMyRidesPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIMyRidesPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "My Rides \r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\nRequest\r\nFro";
                    this.mUIMyRidesPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIMyRidesPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "mainContent";
                    this.mUIMyRidesPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"mainContent\" id=\"myRides\" style=\"display: none;\"";
                    this.mUIMyRidesPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "50";
                    this.mUIMyRidesPane.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIMyRidesPane;
            }
        }
        
        public HtmlDiv UISearchRidePane
        {
            get
            {
                if ((this.mUISearchRidePane == null))
                {
                    this.mUISearchRidePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUISearchRidePane.SearchProperties[HtmlDiv.PropertyNames.Id] = "searchRide";
                    this.mUISearchRidePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISearchRidePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Search Ride \r\n\r\n\r\nDestination :  \r\n\r\n\r\n\r";
                    this.mUISearchRidePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISearchRidePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "mainContent";
                    this.mUISearchRidePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"mainContent\" id=\"searchRide\" style=\"display: block;\"";
                    this.mUISearchRidePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "102";
                    this.mUISearchRidePane.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUISearchRidePane;
            }
        }
        
        public HtmlDiv UIPostRequestPane
        {
            get
            {
                if ((this.mUIPostRequestPane == null))
                {
                    this.mUIPostRequestPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPostRequestPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "postRequest";
                    this.mUIPostRequestPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPostRequestPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Post New Request \r\n\r\n\r\n\r\nDate :  \r\n\r\nFro";
                    this.mUIPostRequestPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPostRequestPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "mainContent container";
                    this.mUIPostRequestPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"mainContent container\" id=\"postRequest\" style=\"display: none;\"";
                    this.mUIPostRequestPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "131";
                    this.mUIPostRequestPane.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIPostRequestPane;
            }
        }
        
        public HtmlDiv UIPublishRidePane
        {
            get
            {
                if ((this.mUIPublishRidePane == null))
                {
                    this.mUIPublishRidePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPublishRidePane.SearchProperties[HtmlDiv.PropertyNames.Id] = "publishRide";
                    this.mUIPublishRidePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPublishRidePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Publish New Ride \r\n\r\n\r\n\r\nDate :  \r\n\r\nFro";
                    this.mUIPublishRidePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPublishRidePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "mainContent container";
                    this.mUIPublishRidePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"mainContent container\" id=\"publishRide\" style=\"display: block;\"";
                    this.mUIPublishRidePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "122";
                    this.mUIPublishRidePane.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIPublishRidePane;
            }
        }
        
        public HtmlCustom UIAHomeCustom1
        {
            get
            {
                if ((this.mUIAHomeCustom1 == null))
                {
                    this.mUIAHomeCustom1 = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIAHomeCustom1.SearchProperties["TagName"] = "A";
                    this.mUIAHomeCustom1.SearchProperties["Id"] = "aHome";
                    this.mUIAHomeCustom1.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIAHomeCustom1.FilterProperties["Class"] = null;
                    this.mUIAHomeCustom1.FilterProperties["ControlDefinition"] = "id=\"aHome\" style=\"color: white;\" onclick";
                    this.mUIAHomeCustom1.FilterProperties["TagInstance"] = "1";
                    this.mUIAHomeCustom1.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIAHomeCustom1;
            }
        }
        
        public HtmlEdit UIDateEdit
        {
            get
            {
                if ((this.mUIDateEdit == null))
                {
                    this.mUIDateEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIDateEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "postDateInput";
                    this.mUIDateEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Date";
                    this.mUIDateEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIDateEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIDateEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIDateEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "inputText";
                    this.mUIDateEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Date\" class=\"inputText\" id=\"postDa";
                    this.mUIDateEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "36";
                    this.mUIDateEdit.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIDateEdit;
            }
        }
        
        public HtmlRadioButton UINORadioButton
        {
            get
            {
                if ((this.mUINORadioButton == null))
                {
                    this.mUINORadioButton = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUINORadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Id] = "PostSmokeNo";
                    this.mUINORadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "postRadio";
                    this.mUINORadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Value] = "on";
                    this.mUINORadioButton.FilterProperties[HtmlRadioButton.PropertyNames.LabeledBy] = "No ";
                    this.mUINORadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUINORadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "3";
                    this.mUINORadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Class] = "radioInput";
                    this.mUINORadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "name=\"postRadio\" class=\"radioInput\" id=\"";
                    this.mUINORadioButton.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "42";
                    this.mUINORadioButton.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUINORadioButton;
            }
        }
        
        public HtmlRadioButton UIYesRadioButton
        {
            get
            {
                if ((this.mUIYesRadioButton == null))
                {
                    this.mUIYesRadioButton = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUIYesRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Id] = "PostSmokeYes";
                    this.mUIYesRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "postRadio";
                    this.mUIYesRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Value] = "on";
                    this.mUIYesRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.LabeledBy] = "Yes ";
                    this.mUIYesRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUIYesRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "3";
                    this.mUIYesRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Class] = "radioInput";
                    this.mUIYesRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "name=\"postRadio\" class=\"radioInput\" id=\"";
                    this.mUIYesRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "41";
                    this.mUIYesRadioButton.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIYesRadioButton;
            }
        }
        
        public UIPostContentLeftPane UIPostContentLeftPane
        {
            get
            {
                if ((this.mUIPostContentLeftPane == null))
                {
                    this.mUIPostContentLeftPane = new UIPostContentLeftPane(this);
                }
                return this.mUIPostContentLeftPane;
            }
        }
        
        public HtmlRadioButton UIDontcareRadioButton
        {
            get
            {
                if ((this.mUIDontcareRadioButton == null))
                {
                    this.mUIDontcareRadioButton = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUIDontcareRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Id] = "PostSmokeDontCare";
                    this.mUIDontcareRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "postRadio";
                    this.mUIDontcareRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Value] = "on";
                    this.mUIDontcareRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.LabeledBy] = "Dont care ";
                    this.mUIDontcareRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUIDontcareRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "3";
                    this.mUIDontcareRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Class] = "radioInput";
                    this.mUIDontcareRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "name=\"postRadio\" class=\"radioInput\" id=\"";
                    this.mUIDontcareRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "43";
                    this.mUIDontcareRadioButton.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIDontcareRadioButton;
            }
        }
        
        public HtmlRadioButton UIBigbagRadioButton
        {
            get
            {
                if ((this.mUIBigbagRadioButton == null))
                {
                    this.mUIBigbagRadioButton = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUIBigbagRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Id] = "post1bad";
                    this.mUIBigbagRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "postRadio2";
                    this.mUIBigbagRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Value] = "on";
                    this.mUIBigbagRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.LabeledBy] = "Big bag ";
                    this.mUIBigbagRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUIBigbagRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "2";
                    this.mUIBigbagRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Class] = "radioInput";
                    this.mUIBigbagRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "name=\"postRadio2\" class=\"radioInput\" id=";
                    this.mUIBigbagRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "44";
                    this.mUIBigbagRadioButton.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIBigbagRadioButton;
            }
        }
        
        public HtmlRadioButton UINoneSmallbagRadioButton
        {
            get
            {
                if ((this.mUINoneSmallbagRadioButton == null))
                {
                    this.mUINoneSmallbagRadioButton = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUINoneSmallbagRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Id] = "post0bag";
                    this.mUINoneSmallbagRadioButton.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "postRadio2";
                    this.mUINoneSmallbagRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Value] = "on";
                    this.mUINoneSmallbagRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.LabeledBy] = "None/Small bag ";
                    this.mUINoneSmallbagRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUINoneSmallbagRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "2";
                    this.mUINoneSmallbagRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.Class] = "radioInput";
                    this.mUINoneSmallbagRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "name=\"postRadio2\" class=\"radioInput\" id=";
                    this.mUINoneSmallbagRadioButton.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "45";
                    this.mUINoneSmallbagRadioButton.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUINoneSmallbagRadioButton;
            }
        }
        
        public HtmlEdit UIPostInputEditSource
        {
            get
            {
                if ((this.mUIPostInputEditSource == null))
                {
                    this.mUIPostInputEditSource = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPostInputEditSource.SearchProperties[HtmlEdit.PropertyNames.Id] = "postInputSource";
                    this.mUIPostInputEditSource.SearchProperties[HtmlEdit.PropertyNames.Name] = "postInput";
                    this.mUIPostInputEditSource.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIPostInputEditSource.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPostInputEditSource.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPostInputEditSource.FilterProperties[HtmlEdit.PropertyNames.Class] = "inputText";
                    this.mUIPostInputEditSource.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"postInput\" class=\"inputText\" id=\"p";
                    this.mUIPostInputEditSource.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "39";
                    this.mUIPostInputEditSource.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIPostInputEditSource;
            }
        }
        
        public HtmlDiv UIBeershebaIsraelPane
        {
            get
            {
                if ((this.mUIBeershebaIsraelPane == null))
                {
                    this.mUIBeershebaIsraelPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIBeershebaIsraelPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIBeershebaIsraelPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBeershebaIsraelPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "BeershebaIsrael";
                    this.mUIBeershebaIsraelPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBeershebaIsraelPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "pac-item";
                    this.mUIBeershebaIsraelPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"pac-item\"";
                    this.mUIBeershebaIsraelPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "220";
                    this.mUIBeershebaIsraelPane.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIBeershebaIsraelPane;
            }
        }
        
        public HtmlSpan UIIsraelPane
        {
            get
            {
                if ((this.mUIIsraelPane == null))
                {
                    this.mUIIsraelPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIIsraelPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIIsraelPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIIsraelPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Israel";
                    this.mUIIsraelPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIIsraelPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIIsraelPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = null;
                    this.mUIIsraelPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "245";
                    this.mUIIsraelPane.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIIsraelPane;
            }
        }
        
        public HtmlEdit UIPostInputEditDestination
        {
            get
            {
                if ((this.mUIPostInputEditDestination == null))
                {
                    this.mUIPostInputEditDestination = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPostInputEditDestination.SearchProperties[HtmlEdit.PropertyNames.Id] = "postInputDest";
                    this.mUIPostInputEditDestination.SearchProperties[HtmlEdit.PropertyNames.Name] = "postInput";
                    this.mUIPostInputEditDestination.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIPostInputEditDestination.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPostInputEditDestination.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPostInputEditDestination.FilterProperties[HtmlEdit.PropertyNames.Class] = "inputText";
                    this.mUIPostInputEditDestination.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"postInput\" class=\"inputText\" id=\"p";
                    this.mUIPostInputEditDestination.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "40";
                    this.mUIPostInputEditDestination.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIPostInputEditDestination;
            }
        }
        
        public HtmlDiv UIHaifaIsraelPane
        {
            get
            {
                if ((this.mUIHaifaIsraelPane == null))
                {
                    this.mUIHaifaIsraelPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIHaifaIsraelPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIHaifaIsraelPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIHaifaIsraelPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "HaifaIsrael";
                    this.mUIHaifaIsraelPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIHaifaIsraelPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "pac-item";
                    this.mUIHaifaIsraelPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"pac-item\"";
                    this.mUIHaifaIsraelPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "226";
                    this.mUIHaifaIsraelPane.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIHaifaIsraelPane;
            }
        }
        
        public HtmlEdit UIPostFromTimeInputEdit
        {
            get
            {
                if ((this.mUIPostFromTimeInputEdit == null))
                {
                    this.mUIPostFromTimeInputEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPostFromTimeInputEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "postFromTimeInput";
                    this.mUIPostFromTimeInputEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIPostFromTimeInputEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIPostFromTimeInputEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPostFromTimeInputEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPostFromTimeInputEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "inputText timeInput";
                    this.mUIPostFromTimeInputEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"inputText timeInput\" id=\"postFrom";
                    this.mUIPostFromTimeInputEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "37";
                    this.mUIPostFromTimeInputEdit.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIPostFromTimeInputEdit;
            }
        }
        
        public HtmlEdit UIPostToTimeInputEdit
        {
            get
            {
                if ((this.mUIPostToTimeInputEdit == null))
                {
                    this.mUIPostToTimeInputEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPostToTimeInputEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "postToTimeInput";
                    this.mUIPostToTimeInputEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIPostToTimeInputEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIPostToTimeInputEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPostToTimeInputEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPostToTimeInputEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "inputText timeInput";
                    this.mUIPostToTimeInputEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"inputText timeInput\" id=\"postToTi";
                    this.mUIPostToTimeInputEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "38";
                    this.mUIPostToTimeInputEdit.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIPostToTimeInputEdit;
            }
        }
        
        public UIPostContentPane UIPostContentPane
        {
            get
            {
                if ((this.mUIPostContentPane == null))
                {
                    this.mUIPostContentPane = new UIPostContentPane(this);
                }
                return this.mUIPostContentPane;
            }
        }
        
        public HtmlSpan UIBeershebaPane
        {
            get
            {
                if ((this.mUIBeershebaPane == null))
                {
                    this.mUIBeershebaPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIBeershebaPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIBeershebaPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBeershebaPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Beersheba";
                    this.mUIBeershebaPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBeershebaPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "pac-matched";
                    this.mUIBeershebaPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"pac-matched\"";
                    this.mUIBeershebaPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "244";
                    this.mUIBeershebaPane.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIBeershebaPane;
            }
        }
        
        public HtmlDiv UIHaifaIsraelPane1
        {
            get
            {
                if ((this.mUIHaifaIsraelPane1 == null))
                {
                    this.mUIHaifaIsraelPane1 = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIHaifaIsraelPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIHaifaIsraelPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIHaifaIsraelPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "HaifaIsrael";
                    this.mUIHaifaIsraelPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIHaifaIsraelPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "pac-item";
                    this.mUIHaifaIsraelPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"pac-item\"";
                    this.mUIHaifaIsraelPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "228";
                    this.mUIHaifaIsraelPane1.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIHaifaIsraelPane1;
            }
        }
        
        public UIPostContentLeftPane1 UIPostContentLeftPane1
        {
            get
            {
                if ((this.mUIPostContentLeftPane1 == null))
                {
                    this.mUIPostContentLeftPane1 = new UIPostContentLeftPane1(this);
                }
                return this.mUIPostContentLeftPane1;
            }
        }
        
        public UIPostContentPane1 UIPostContentPane1
        {
            get
            {
                if ((this.mUIPostContentPane1 == null))
                {
                    this.mUIPostContentPane1 = new UIPostContentPane1(this);
                }
                return this.mUIPostContentPane1;
            }
        }
        
        public HtmlEdit UIPostInputEdit
        {
            get
            {
                if ((this.mUIPostInputEdit == null))
                {
                    this.mUIPostInputEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPostInputEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "postInputSource";
                    this.mUIPostInputEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "postInput";
                    this.mUIPostInputEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIPostInputEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPostInputEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPostInputEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "inputText";
                    this.mUIPostInputEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"postInput\" class=\"inputText\" id=\"p";
                    this.mUIPostInputEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "40";
                    this.mUIPostInputEdit.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIPostInputEdit;
            }
        }
        
        public HtmlSpan UIBeershebaPane1
        {
            get
            {
                if ((this.mUIBeershebaPane1 == null))
                {
                    this.mUIBeershebaPane1 = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIBeershebaPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIBeershebaPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIBeershebaPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Beersheba";
                    this.mUIBeershebaPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIBeershebaPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "pac-matched";
                    this.mUIBeershebaPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"pac-matched\"";
                    this.mUIBeershebaPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "255";
                    this.mUIBeershebaPane1.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIBeershebaPane1;
            }
        }
        
        public HtmlEdit UIPostInputEdit1
        {
            get
            {
                if ((this.mUIPostInputEdit1 == null))
                {
                    this.mUIPostInputEdit1 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPostInputEdit1.SearchProperties[HtmlEdit.PropertyNames.Id] = "postInputDest";
                    this.mUIPostInputEdit1.SearchProperties[HtmlEdit.PropertyNames.Name] = "postInput";
                    this.mUIPostInputEdit1.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIPostInputEdit1.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPostInputEdit1.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPostInputEdit1.FilterProperties[HtmlEdit.PropertyNames.Class] = "inputText";
                    this.mUIPostInputEdit1.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"postInput\" class=\"inputText\" id=\"p";
                    this.mUIPostInputEdit1.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "41";
                    this.mUIPostInputEdit1.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIPostInputEdit1;
            }
        }
        
        public HtmlSpan UIIsraelPane1
        {
            get
            {
                if ((this.mUIIsraelPane1 == null))
                {
                    this.mUIIsraelPane1 = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIIsraelPane1.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIIsraelPane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIIsraelPane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Israel";
                    this.mUIIsraelPane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIIsraelPane1.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIIsraelPane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = null;
                    this.mUIIsraelPane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "256";
                    this.mUIIsraelPane1.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIIsraelPane1;
            }
        }
        
        public HtmlRadioButton UINORadioButton1
        {
            get
            {
                if ((this.mUINORadioButton1 == null))
                {
                    this.mUINORadioButton1 = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUINORadioButton1.SearchProperties[HtmlRadioButton.PropertyNames.Id] = "PostSmokeNo";
                    this.mUINORadioButton1.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "postRadio";
                    this.mUINORadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.Value] = "on";
                    this.mUINORadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.LabeledBy] = "No ";
                    this.mUINORadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUINORadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "3";
                    this.mUINORadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.Class] = "radioInput";
                    this.mUINORadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "name=\"postRadio\" class=\"radioInput\" id=\"";
                    this.mUINORadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "43";
                    this.mUINORadioButton1.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUINORadioButton1;
            }
        }
        
        public HtmlRadioButton UIYesRadioButton1
        {
            get
            {
                if ((this.mUIYesRadioButton1 == null))
                {
                    this.mUIYesRadioButton1 = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUIYesRadioButton1.SearchProperties[HtmlRadioButton.PropertyNames.Id] = "PostSmokeYes";
                    this.mUIYesRadioButton1.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "postRadio";
                    this.mUIYesRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.Value] = "on";
                    this.mUIYesRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.LabeledBy] = "Yes ";
                    this.mUIYesRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUIYesRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "3";
                    this.mUIYesRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.Class] = "radioInput";
                    this.mUIYesRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "name=\"postRadio\" class=\"radioInput\" id=\"";
                    this.mUIYesRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "42";
                    this.mUIYesRadioButton1.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIYesRadioButton1;
            }
        }
        
        public HtmlRadioButton UIDontcareRadioButton1
        {
            get
            {
                if ((this.mUIDontcareRadioButton1 == null))
                {
                    this.mUIDontcareRadioButton1 = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUIDontcareRadioButton1.SearchProperties[HtmlRadioButton.PropertyNames.Id] = "PostSmokeDontCare";
                    this.mUIDontcareRadioButton1.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "postRadio";
                    this.mUIDontcareRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.Value] = "on";
                    this.mUIDontcareRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.LabeledBy] = "Dont care ";
                    this.mUIDontcareRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUIDontcareRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "3";
                    this.mUIDontcareRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.Class] = "radioInput";
                    this.mUIDontcareRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "name=\"postRadio\" class=\"radioInput\" id=\"";
                    this.mUIDontcareRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "44";
                    this.mUIDontcareRadioButton1.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIDontcareRadioButton1;
            }
        }
        
        public HtmlRadioButton UIBigbagRadioButton1
        {
            get
            {
                if ((this.mUIBigbagRadioButton1 == null))
                {
                    this.mUIBigbagRadioButton1 = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUIBigbagRadioButton1.SearchProperties[HtmlRadioButton.PropertyNames.Id] = "post1bad";
                    this.mUIBigbagRadioButton1.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "postRadio2";
                    this.mUIBigbagRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.Value] = "on";
                    this.mUIBigbagRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.LabeledBy] = "Big bag ";
                    this.mUIBigbagRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUIBigbagRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "2";
                    this.mUIBigbagRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.Class] = "radioInput";
                    this.mUIBigbagRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "name=\"postRadio2\" class=\"radioInput\" id=";
                    this.mUIBigbagRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "45";
                    this.mUIBigbagRadioButton1.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIBigbagRadioButton1;
            }
        }
        
        public HtmlRadioButton UINoneSmallbagRadioButton1
        {
            get
            {
                if ((this.mUINoneSmallbagRadioButton1 == null))
                {
                    this.mUINoneSmallbagRadioButton1 = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUINoneSmallbagRadioButton1.SearchProperties[HtmlRadioButton.PropertyNames.Id] = "post0bag";
                    this.mUINoneSmallbagRadioButton1.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "postRadio2";
                    this.mUINoneSmallbagRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.Value] = "on";
                    this.mUINoneSmallbagRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.LabeledBy] = "None/Small bag ";
                    this.mUINoneSmallbagRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUINoneSmallbagRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "2";
                    this.mUINoneSmallbagRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.Class] = "radioInput";
                    this.mUINoneSmallbagRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "name=\"postRadio2\" class=\"radioInput\" id=";
                    this.mUINoneSmallbagRadioButton1.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "46";
                    this.mUINoneSmallbagRadioButton1.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUINoneSmallbagRadioButton1;
            }
        }
        
        public HtmlEdit UIDateEdit1
        {
            get
            {
                if ((this.mUIDateEdit1 == null))
                {
                    this.mUIDateEdit1 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIDateEdit1.SearchProperties[HtmlEdit.PropertyNames.Id] = "postDateInput";
                    this.mUIDateEdit1.SearchProperties[HtmlEdit.PropertyNames.Name] = "Date";
                    this.mUIDateEdit1.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIDateEdit1.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIDateEdit1.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIDateEdit1.FilterProperties[HtmlEdit.PropertyNames.Class] = "inputText";
                    this.mUIDateEdit1.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Date\" class=\"inputText\" id=\"postDa";
                    this.mUIDateEdit1.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "37";
                    this.mUIDateEdit1.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIDateEdit1;
            }
        }
        
        public HtmlEdit UIPostFromTimeInputEdit1
        {
            get
            {
                if ((this.mUIPostFromTimeInputEdit1 == null))
                {
                    this.mUIPostFromTimeInputEdit1 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPostFromTimeInputEdit1.SearchProperties[HtmlEdit.PropertyNames.Id] = "postFromTimeInput";
                    this.mUIPostFromTimeInputEdit1.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIPostFromTimeInputEdit1.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIPostFromTimeInputEdit1.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPostFromTimeInputEdit1.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPostFromTimeInputEdit1.FilterProperties[HtmlEdit.PropertyNames.Class] = "inputText timeInput";
                    this.mUIPostFromTimeInputEdit1.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"inputText timeInput\" id=\"postFrom";
                    this.mUIPostFromTimeInputEdit1.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "38";
                    this.mUIPostFromTimeInputEdit1.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIPostFromTimeInputEdit1;
            }
        }
        
        public HtmlEdit UIPostToTimeInputEdit1
        {
            get
            {
                if ((this.mUIPostToTimeInputEdit1 == null))
                {
                    this.mUIPostToTimeInputEdit1 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPostToTimeInputEdit1.SearchProperties[HtmlEdit.PropertyNames.Id] = "postToTimeInput";
                    this.mUIPostToTimeInputEdit1.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIPostToTimeInputEdit1.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIPostToTimeInputEdit1.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPostToTimeInputEdit1.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPostToTimeInputEdit1.FilterProperties[HtmlEdit.PropertyNames.Class] = "inputText timeInput";
                    this.mUIPostToTimeInputEdit1.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"inputText timeInput\" id=\"postToTi";
                    this.mUIPostToTimeInputEdit1.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "39";
                    this.mUIPostToTimeInputEdit1.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIPostToTimeInputEdit1;
            }
        }
        
        public UIPostContentPane2 UIPostContentPane2
        {
            get
            {
                if ((this.mUIPostContentPane2 == null))
                {
                    this.mUIPostContentPane2 = new UIPostContentPane2(this);
                }
                return this.mUIPostContentPane2;
            }
        }
        
        public HtmlEdit UIPublishInputEdit
        {
            get
            {
                if ((this.mUIPublishInputEdit == null))
                {
                    this.mUIPublishInputEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPublishInputEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "inputSource";
                    this.mUIPublishInputEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "publishInput";
                    this.mUIPublishInputEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIPublishInputEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPublishInputEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPublishInputEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "inputText";
                    this.mUIPublishInputEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"publishInput\" class=\"inputText\" id";
                    this.mUIPublishInputEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "57";
                    this.mUIPublishInputEdit.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIPublishInputEdit;
            }
        }
        
        public HtmlEdit UIPublishInputEdit1
        {
            get
            {
                if ((this.mUIPublishInputEdit1 == null))
                {
                    this.mUIPublishInputEdit1 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPublishInputEdit1.SearchProperties[HtmlEdit.PropertyNames.Id] = "inputStopOver";
                    this.mUIPublishInputEdit1.SearchProperties[HtmlEdit.PropertyNames.Name] = "publishInput";
                    this.mUIPublishInputEdit1.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIPublishInputEdit1.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPublishInputEdit1.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPublishInputEdit1.FilterProperties[HtmlEdit.PropertyNames.Class] = "inputText";
                    this.mUIPublishInputEdit1.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"publishInput\" class=\"inputText\" id";
                    this.mUIPublishInputEdit1.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "59";
                    this.mUIPublishInputEdit1.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIPublishInputEdit1;
            }
        }
        
        public HtmlCustom UIFirsOutCustom
        {
            get
            {
                if ((this.mUIFirsOutCustom == null))
                {
                    this.mUIFirsOutCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIFirsOutCustom.SearchProperties["TagName"] = "P";
                    this.mUIFirsOutCustom.SearchProperties["Id"] = "firsOut";
                    this.mUIFirsOutCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIFirsOutCustom.FilterProperties["Class"] = "stopOverOut outputStopOver";
                    this.mUIFirsOutCustom.FilterProperties["ControlDefinition"] = "class=\"stopOverOut outputStopOver\" id=\"f";
                    this.mUIFirsOutCustom.FilterProperties["TagInstance"] = "57";
                    this.mUIFirsOutCustom.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIFirsOutCustom;
            }
        }
        
        public HtmlCustom UISecondOutCustom
        {
            get
            {
                if ((this.mUISecondOutCustom == null))
                {
                    this.mUISecondOutCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUISecondOutCustom.SearchProperties["TagName"] = "P";
                    this.mUISecondOutCustom.SearchProperties["Id"] = "secondOut";
                    this.mUISecondOutCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUISecondOutCustom.FilterProperties["Class"] = "stopOverOut outputStopOver";
                    this.mUISecondOutCustom.FilterProperties["ControlDefinition"] = "class=\"stopOverOut outputStopOver\" id=\"s";
                    this.mUISecondOutCustom.FilterProperties["TagInstance"] = "59";
                    this.mUISecondOutCustom.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUISecondOutCustom;
            }
        }
        
        public HtmlCustom UIThirdOutCustom
        {
            get
            {
                if ((this.mUIThirdOutCustom == null))
                {
                    this.mUIThirdOutCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIThirdOutCustom.SearchProperties["TagName"] = "P";
                    this.mUIThirdOutCustom.SearchProperties["Id"] = "thirdOut";
                    this.mUIThirdOutCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIThirdOutCustom.FilterProperties["Class"] = "stopOverOut outputStopOver";
                    this.mUIThirdOutCustom.FilterProperties["ControlDefinition"] = "class=\"stopOverOut outputStopOver\" id=\"t";
                    this.mUIThirdOutCustom.FilterProperties["TagInstance"] = "61";
                    this.mUIThirdOutCustom.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIThirdOutCustom;
            }
        }
        
        public HtmlCustom UIFourthOutCustom
        {
            get
            {
                if ((this.mUIFourthOutCustom == null))
                {
                    this.mUIFourthOutCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIFourthOutCustom.SearchProperties["TagName"] = "P";
                    this.mUIFourthOutCustom.SearchProperties["Id"] = "fourthOut";
                    this.mUIFourthOutCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIFourthOutCustom.FilterProperties["Class"] = "stopOverOut outputStopOver";
                    this.mUIFourthOutCustom.FilterProperties["ControlDefinition"] = "class=\"stopOverOut outputStopOver\" id=\"f";
                    this.mUIFourthOutCustom.FilterProperties["TagInstance"] = "63";
                    this.mUIFourthOutCustom.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIFourthOutCustom;
            }
        }
        
        public HtmlCustom UIFifthOutCustom
        {
            get
            {
                if ((this.mUIFifthOutCustom == null))
                {
                    this.mUIFifthOutCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIFifthOutCustom.SearchProperties["TagName"] = "P";
                    this.mUIFifthOutCustom.SearchProperties["Id"] = "fifthOut";
                    this.mUIFifthOutCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIFifthOutCustom.FilterProperties["Class"] = "stopOverOut outputStopOver";
                    this.mUIFifthOutCustom.FilterProperties["ControlDefinition"] = "class=\"stopOverOut outputStopOver\" id=\"f";
                    this.mUIFifthOutCustom.FilterProperties["TagInstance"] = "65";
                    this.mUIFifthOutCustom.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIFifthOutCustom;
            }
        }
        
        public HtmlInputButton UIXButton
        {
            get
            {
                if ((this.mUIXButton == null))
                {
                    this.mUIXButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIXButton.SearchProperties[HtmlButton.PropertyNames.Id] = "fifthButton";
                    this.mUIXButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIXButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "X";
                    this.mUIXButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUIXButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIXButton.FilterProperties[HtmlButton.PropertyNames.Class] = "clearBtn btn a";
                    this.mUIXButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"clearBtn btn a\" id=\"fifthButton\" ";
                    this.mUIXButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "75";
                    this.mUIXButton.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIXButton;
            }
        }
        
        public HtmlInputButton UIXButton1
        {
            get
            {
                if ((this.mUIXButton1 == null))
                {
                    this.mUIXButton1 = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIXButton1.SearchProperties[HtmlButton.PropertyNames.Id] = "fourthButton";
                    this.mUIXButton1.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIXButton1.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "X";
                    this.mUIXButton1.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUIXButton1.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIXButton1.FilterProperties[HtmlButton.PropertyNames.Class] = "clearBtn btn a";
                    this.mUIXButton1.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"clearBtn btn a\" id=\"fourthButton\"";
                    this.mUIXButton1.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "72";
                    this.mUIXButton1.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIXButton1;
            }
        }
        
        public HtmlInputButton UIXButton2
        {
            get
            {
                if ((this.mUIXButton2 == null))
                {
                    this.mUIXButton2 = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIXButton2.SearchProperties[HtmlButton.PropertyNames.Id] = "thirdButton";
                    this.mUIXButton2.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIXButton2.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "X";
                    this.mUIXButton2.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUIXButton2.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIXButton2.FilterProperties[HtmlButton.PropertyNames.Class] = "clearBtn btn a";
                    this.mUIXButton2.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"clearBtn btn a\" id=\"thirdButton\" ";
                    this.mUIXButton2.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "69";
                    this.mUIXButton2.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIXButton2;
            }
        }
        
        public HtmlInputButton UIXButton3
        {
            get
            {
                if ((this.mUIXButton3 == null))
                {
                    this.mUIXButton3 = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIXButton3.SearchProperties[HtmlButton.PropertyNames.Id] = "secondButton";
                    this.mUIXButton3.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIXButton3.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "X";
                    this.mUIXButton3.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUIXButton3.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIXButton3.FilterProperties[HtmlButton.PropertyNames.Class] = "clearBtn btn a";
                    this.mUIXButton3.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"clearBtn btn a\" id=\"secondButton\"";
                    this.mUIXButton3.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "66";
                    this.mUIXButton3.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIXButton3;
            }
        }
        
        public HtmlInputButton UIXButton4
        {
            get
            {
                if ((this.mUIXButton4 == null))
                {
                    this.mUIXButton4 = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIXButton4.SearchProperties[HtmlButton.PropertyNames.Id] = "firstButton";
                    this.mUIXButton4.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIXButton4.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "X";
                    this.mUIXButton4.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUIXButton4.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIXButton4.FilterProperties[HtmlButton.PropertyNames.Class] = "clearBtn btn a";
                    this.mUIXButton4.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"clearBtn btn a\" id=\"firstButton\" ";
                    this.mUIXButton4.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "63";
                    this.mUIXButton4.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIXButton4;
            }
        }
        
        public HtmlEdit UIPublishInputEdit11
        {
            get
            {
                if ((this.mUIPublishInputEdit11 == null))
                {
                    this.mUIPublishInputEdit11 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPublishInputEdit11.SearchProperties[HtmlEdit.PropertyNames.Id] = "inputDest";
                    this.mUIPublishInputEdit11.SearchProperties[HtmlEdit.PropertyNames.Name] = "publishInput";
                    this.mUIPublishInputEdit11.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIPublishInputEdit11.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPublishInputEdit11.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPublishInputEdit11.FilterProperties[HtmlEdit.PropertyNames.Class] = "inputText";
                    this.mUIPublishInputEdit11.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"publishInput\" class=\"inputText\" id";
                    this.mUIPublishInputEdit11.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "58";
                    this.mUIPublishInputEdit11.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIPublishInputEdit11;
            }
        }
        
        public UIPublishContentLeftPane UIPublishContentLeftPane
        {
            get
            {
                if ((this.mUIPublishContentLeftPane == null))
                {
                    this.mUIPublishContentLeftPane = new UIPublishContentLeftPane(this);
                }
                return this.mUIPublishContentLeftPane;
            }
        }
        
        public HtmlEdit UIDateEdit2
        {
            get
            {
                if ((this.mUIDateEdit2 == null))
                {
                    this.mUIDateEdit2 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIDateEdit2.SearchProperties[HtmlEdit.PropertyNames.Id] = "publishDateInput";
                    this.mUIDateEdit2.SearchProperties[HtmlEdit.PropertyNames.Name] = "Date";
                    this.mUIDateEdit2.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIDateEdit2.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIDateEdit2.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIDateEdit2.FilterProperties[HtmlEdit.PropertyNames.Class] = "inputText";
                    this.mUIDateEdit2.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Date\" class=\"inputText\" id=\"publis";
                    this.mUIDateEdit2.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "49";
                    this.mUIDateEdit2.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIDateEdit2;
            }
        }
        
        public HtmlDiv UIPublishContentRightPane
        {
            get
            {
                if ((this.mUIPublishContentRightPane == null))
                {
                    this.mUIPublishContentRightPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPublishContentRightPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "publishContentRight";
                    this.mUIPublishContentRightPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPublishContentRightPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Date :  \r\n\r\nFrom Time :  \r\n\r\nTo Time :  ";
                    this.mUIPublishContentRightPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPublishContentRightPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIPublishContentRightPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"publishContentRight\"";
                    this.mUIPublishContentRightPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "135";
                    this.mUIPublishContentRightPane.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIPublishContentRightPane;
            }
        }
        
        public HtmlEdit UIPublishFromTimeInputEdit
        {
            get
            {
                if ((this.mUIPublishFromTimeInputEdit == null))
                {
                    this.mUIPublishFromTimeInputEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPublishFromTimeInputEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "publishFromTimeInput";
                    this.mUIPublishFromTimeInputEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIPublishFromTimeInputEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIPublishFromTimeInputEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPublishFromTimeInputEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPublishFromTimeInputEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "inputText timeInput";
                    this.mUIPublishFromTimeInputEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"inputText timeInput\" id=\"publishF";
                    this.mUIPublishFromTimeInputEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "50";
                    this.mUIPublishFromTimeInputEdit.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIPublishFromTimeInputEdit;
            }
        }
        
        public HtmlEdit UIPublishToTimeInputEdit
        {
            get
            {
                if ((this.mUIPublishToTimeInputEdit == null))
                {
                    this.mUIPublishToTimeInputEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPublishToTimeInputEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "publishToTimeInput";
                    this.mUIPublishToTimeInputEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIPublishToTimeInputEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIPublishToTimeInputEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPublishToTimeInputEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPublishToTimeInputEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "inputText timeInput";
                    this.mUIPublishToTimeInputEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"inputText timeInput\" id=\"publishT";
                    this.mUIPublishToTimeInputEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "51";
                    this.mUIPublishToTimeInputEdit.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIPublishToTimeInputEdit;
            }
        }
        
        public HtmlRadioButton UINORadioButton2
        {
            get
            {
                if ((this.mUINORadioButton2 == null))
                {
                    this.mUINORadioButton2 = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUINORadioButton2.SearchProperties[HtmlRadioButton.PropertyNames.Id] = "smokeNo";
                    this.mUINORadioButton2.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "publishRadio";
                    this.mUINORadioButton2.FilterProperties[HtmlRadioButton.PropertyNames.Value] = "on";
                    this.mUINORadioButton2.FilterProperties[HtmlRadioButton.PropertyNames.LabeledBy] = "No ";
                    this.mUINORadioButton2.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUINORadioButton2.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "3";
                    this.mUINORadioButton2.FilterProperties[HtmlRadioButton.PropertyNames.Class] = "radioInput";
                    this.mUINORadioButton2.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "name=\"publishRadio\" class=\"radioInput\" i";
                    this.mUINORadioButton2.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "53";
                    this.mUINORadioButton2.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUINORadioButton2;
            }
        }
        
        public HtmlRadioButton UIYesRadioButton2
        {
            get
            {
                if ((this.mUIYesRadioButton2 == null))
                {
                    this.mUIYesRadioButton2 = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUIYesRadioButton2.SearchProperties[HtmlRadioButton.PropertyNames.Id] = "smokeYes";
                    this.mUIYesRadioButton2.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "publishRadio";
                    this.mUIYesRadioButton2.FilterProperties[HtmlRadioButton.PropertyNames.Value] = "on";
                    this.mUIYesRadioButton2.FilterProperties[HtmlRadioButton.PropertyNames.LabeledBy] = "Yes ";
                    this.mUIYesRadioButton2.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUIYesRadioButton2.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "3";
                    this.mUIYesRadioButton2.FilterProperties[HtmlRadioButton.PropertyNames.Class] = "radioInput";
                    this.mUIYesRadioButton2.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "name=\"publishRadio\" class=\"radioInput\" i";
                    this.mUIYesRadioButton2.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "52";
                    this.mUIYesRadioButton2.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIYesRadioButton2;
            }
        }
        
        public HtmlRadioButton UIDontcareRadioButton2
        {
            get
            {
                if ((this.mUIDontcareRadioButton2 == null))
                {
                    this.mUIDontcareRadioButton2 = new HtmlRadioButton(this);
                    #region Search Criteria
                    this.mUIDontcareRadioButton2.SearchProperties[HtmlRadioButton.PropertyNames.Id] = "smokeDontCare";
                    this.mUIDontcareRadioButton2.SearchProperties[HtmlRadioButton.PropertyNames.Name] = "publishRadio";
                    this.mUIDontcareRadioButton2.FilterProperties[HtmlRadioButton.PropertyNames.Value] = "on";
                    this.mUIDontcareRadioButton2.FilterProperties[HtmlRadioButton.PropertyNames.LabeledBy] = "Dont care ";
                    this.mUIDontcareRadioButton2.FilterProperties[HtmlRadioButton.PropertyNames.Title] = null;
                    this.mUIDontcareRadioButton2.FilterProperties[HtmlRadioButton.PropertyNames.ItemCount] = "3";
                    this.mUIDontcareRadioButton2.FilterProperties[HtmlRadioButton.PropertyNames.Class] = "radioInput";
                    this.mUIDontcareRadioButton2.FilterProperties[HtmlRadioButton.PropertyNames.ControlDefinition] = "name=\"publishRadio\" class=\"radioInput\" i";
                    this.mUIDontcareRadioButton2.FilterProperties[HtmlRadioButton.PropertyNames.TagInstance] = "54";
                    this.mUIDontcareRadioButton2.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIDontcareRadioButton2;
            }
        }
        
        public HtmlEdit UIPostInputEdit2
        {
            get
            {
                if ((this.mUIPostInputEdit2 == null))
                {
                    this.mUIPostInputEdit2 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPostInputEdit2.SearchProperties[HtmlEdit.PropertyNames.Id] = "maxPasInput";
                    this.mUIPostInputEdit2.SearchProperties[HtmlEdit.PropertyNames.Name] = "postInput";
                    this.mUIPostInputEdit2.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIPostInputEdit2.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPostInputEdit2.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPostInputEdit2.FilterProperties[HtmlEdit.PropertyNames.Class] = "inputText";
                    this.mUIPostInputEdit2.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"postInput\" class=\"inputText\" id=\"m";
                    this.mUIPostInputEdit2.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "55";
                    this.mUIPostInputEdit2.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIPostInputEdit2;
            }
        }
        
        public HtmlEdit UIPublishInputEdit2
        {
            get
            {
                if ((this.mUIPublishInputEdit2 == null))
                {
                    this.mUIPublishInputEdit2 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPublishInputEdit2.SearchProperties[HtmlEdit.PropertyNames.Id] = "priceInput";
                    this.mUIPublishInputEdit2.SearchProperties[HtmlEdit.PropertyNames.Name] = "publishInput";
                    this.mUIPublishInputEdit2.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIPublishInputEdit2.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPublishInputEdit2.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPublishInputEdit2.FilterProperties[HtmlEdit.PropertyNames.Class] = "inputText";
                    this.mUIPublishInputEdit2.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"publishInput\" class=\"inputText\" id";
                    this.mUIPublishInputEdit2.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "56";
                    this.mUIPublishInputEdit2.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIPublishInputEdit2;
            }
        }
        
        public HtmlInputButton UIPublishButton
        {
            get
            {
                if ((this.mUIPublishButton == null))
                {
                    this.mUIPublishButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIPublishButton.SearchProperties[HtmlButton.PropertyNames.Id] = "publishRideBtn";
                    this.mUIPublishButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIPublishButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Publish";
                    this.mUIPublishButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUIPublishButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIPublishButton.FilterProperties[HtmlButton.PropertyNames.Class] = "publishPostButton btn";
                    this.mUIPublishButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"publishPostButton btn\" id=\"publis";
                    this.mUIPublishButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "76";
                    this.mUIPublishButton.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIPublishButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUILoginEmailEdit;
        
        private HtmlEdit mUILoginPassEdit;
        
        private HtmlInputButton mUILoginButton;
        
        private HtmlDiv mUIWrongemailorpasswordPane;
        
        private HtmlDiv mUILoginRegisterContainPane;
        
        private UIEmailPasswordPane mUIEmailPasswordPane;
        
        private HtmlDiv mUIWrongemailorpasswordPane1;
        
        private HtmlInputButton mUILogoutButton;
        
        private UIEmailCustom mUIEmailCustom;
        
        private HtmlCustom mUILeftAsideCustom;
        
        private HtmlDiv mUIPromotionsPane;
        
        private HtmlCustom mUIAHomeCustom;
        
        private HtmlCustom mUIASearchRideCustom;
        
        private HtmlCustom mUIAPublishRideCustom;
        
        private HtmlCustom mUIAPostRequestCustom;
        
        private HtmlCustom mUIAMyRidesCustom;
        
        private HtmlCustom mUIItemCustom;
        
        private HtmlInputButton mUIRegisterButton;
        
        private UIRegisterContentPane mUIRegisterContentPane;
        
        private HtmlEdit mUIRegFNameEdit;
        
        private HtmlEdit mUIRegLNameEdit;
        
        private HtmlEdit mUIRegEmailEdit;
        
        private HtmlEdit mUIRegPhoneEdit;
        
        private HtmlEdit mUIRegPassEdit;
        
        private HtmlEdit mUIRegVerPassEdit;
        
        private HtmlInputButton mUIYesButton;
        
        private HtmlDiv mUIAreYouSureAllDetailsPane;
        
        private HtmlDiv mUIAreYouSureAllDetailsPane1;
        
        private HtmlDiv mUIAreYouSureAllDetailsPane2;
        
        private HtmlDiv mUIAreYouSureAllDetailsPane3;
        
        private HtmlDiv mUIMissingFieldsKeyemaiPane;
        
        private HtmlCustom mUIASearchRideCustom1;
        
        private HtmlCustom mUIAPostRequestCustom1;
        
        private HtmlDiv mUIHomePane;
        
        private HtmlDiv mUIMyRidesPane;
        
        private HtmlDiv mUISearchRidePane;
        
        private HtmlDiv mUIPostRequestPane;
        
        private HtmlDiv mUIPublishRidePane;
        
        private HtmlCustom mUIAHomeCustom1;
        
        private HtmlEdit mUIDateEdit;
        
        private HtmlRadioButton mUINORadioButton;
        
        private HtmlRadioButton mUIYesRadioButton;
        
        private UIPostContentLeftPane mUIPostContentLeftPane;
        
        private HtmlRadioButton mUIDontcareRadioButton;
        
        private HtmlRadioButton mUIBigbagRadioButton;
        
        private HtmlRadioButton mUINoneSmallbagRadioButton;
        
        private HtmlEdit mUIPostInputEditSource;
        
        private HtmlDiv mUIBeershebaIsraelPane;
        
        private HtmlSpan mUIIsraelPane;
        
        private HtmlEdit mUIPostInputEditDestination;
        
        private HtmlDiv mUIHaifaIsraelPane;
        
        private HtmlEdit mUIPostFromTimeInputEdit;
        
        private HtmlEdit mUIPostToTimeInputEdit;
        
        private UIPostContentPane mUIPostContentPane;
        
        private HtmlSpan mUIBeershebaPane;
        
        private HtmlDiv mUIHaifaIsraelPane1;
        
        private UIPostContentLeftPane1 mUIPostContentLeftPane1;
        
        private UIPostContentPane1 mUIPostContentPane1;
        
        private HtmlEdit mUIPostInputEdit;
        
        private HtmlSpan mUIBeershebaPane1;
        
        private HtmlEdit mUIPostInputEdit1;
        
        private HtmlSpan mUIIsraelPane1;
        
        private HtmlRadioButton mUINORadioButton1;
        
        private HtmlRadioButton mUIYesRadioButton1;
        
        private HtmlRadioButton mUIDontcareRadioButton1;
        
        private HtmlRadioButton mUIBigbagRadioButton1;
        
        private HtmlRadioButton mUINoneSmallbagRadioButton1;
        
        private HtmlEdit mUIDateEdit1;
        
        private HtmlEdit mUIPostFromTimeInputEdit1;
        
        private HtmlEdit mUIPostToTimeInputEdit1;
        
        private UIPostContentPane2 mUIPostContentPane2;
        
        private HtmlEdit mUIPublishInputEdit;
        
        private HtmlEdit mUIPublishInputEdit1;
        
        private HtmlCustom mUIFirsOutCustom;
        
        private HtmlCustom mUISecondOutCustom;
        
        private HtmlCustom mUIThirdOutCustom;
        
        private HtmlCustom mUIFourthOutCustom;
        
        private HtmlCustom mUIFifthOutCustom;
        
        private HtmlInputButton mUIXButton;
        
        private HtmlInputButton mUIXButton1;
        
        private HtmlInputButton mUIXButton2;
        
        private HtmlInputButton mUIXButton3;
        
        private HtmlInputButton mUIXButton4;
        
        private HtmlEdit mUIPublishInputEdit11;
        
        private UIPublishContentLeftPane mUIPublishContentLeftPane;
        
        private HtmlEdit mUIDateEdit2;
        
        private HtmlDiv mUIPublishContentRightPane;
        
        private HtmlEdit mUIPublishFromTimeInputEdit;
        
        private HtmlEdit mUIPublishToTimeInputEdit;
        
        private HtmlRadioButton mUINORadioButton2;
        
        private HtmlRadioButton mUIYesRadioButton2;
        
        private HtmlRadioButton mUIDontcareRadioButton2;
        
        private HtmlEdit mUIPostInputEdit2;
        
        private HtmlEdit mUIPublishInputEdit2;
        
        private HtmlInputButton mUIPublishButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEmailPasswordPane : HtmlDiv
    {
        
        public UIEmailPasswordPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "loginContent";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Email:  \r\n\r\nPassword:  ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"loginContent\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
            this.WindowTitles.Add("RideShare");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIPasswordPane
        {
            get
            {
                if ((this.mUIPasswordPane == null))
                {
                    this.mUIPasswordPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIPasswordPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIPasswordPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPasswordPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Password:";
                    this.mUIPasswordPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPasswordPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "loginLabel";
                    this.mUIPasswordPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"loginLabel\"";
                    this.mUIPasswordPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "8";
                    this.mUIPasswordPane.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIPasswordPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIPasswordPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEmailCustom : HtmlCustom
    {
        
        public UIEmailCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "P";
            this.SearchProperties["Id"] = "email";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "detail";
            this.FilterProperties["ControlDefinition"] = "class=\"detail\" id=\"email\"";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("RideShare");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIP1postbguacilPane
        {
            get
            {
                if ((this.mUIP1postbguacilPane == null))
                {
                    this.mUIP1postbguacilPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIP1postbguacilPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIP1postbguacilPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIP1postbguacilPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "p1@post.bgu.ac.il";
                    this.mUIP1postbguacilPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIP1postbguacilPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "detail2";
                    this.mUIP1postbguacilPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"detail2\"";
                    this.mUIP1postbguacilPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
                    this.mUIP1postbguacilPane.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIP1postbguacilPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIP1postbguacilPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRegisterContentPane : HtmlDiv
    {
        
        public UIRegisterContentPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "registerContent";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "First Name:  \r\n\r\nLast Name:  \r\n\r\nEmail: ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"registerContent\" style=\"display: block;\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("RideShare");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UIRegisterButton
        {
            get
            {
                if ((this.mUIRegisterButton == null))
                {
                    this.mUIRegisterButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIRegisterButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIRegisterButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIRegisterButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Register";
                    this.mUIRegisterButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUIRegisterButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIRegisterButton.FilterProperties[HtmlButton.PropertyNames.Class] = "button btn";
                    this.mUIRegisterButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"button btn\" onclick=\"userRegister";
                    this.mUIRegisterButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "7";
                    this.mUIRegisterButton.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIRegisterButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUIRegisterButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPostContentLeftPane : HtmlDiv
    {
        
        public UIPostContentLeftPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "postContentLeft";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Source :  \r\n\r\nDestination :  \r\n\r\n\r\nSmoki";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"postContentLeft\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "120";
            this.WindowTitles.Add("RideShare");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UISmokingYesNoDontcarePane
        {
            get
            {
                if ((this.mUISmokingYesNoDontcarePane == null))
                {
                    this.mUISmokingYesNoDontcarePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUISmokingYesNoDontcarePane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUISmokingYesNoDontcarePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISmokingYesNoDontcarePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Smoking :  Yes   No   Dont care  \r\n\r\nBag";
                    this.mUISmokingYesNoDontcarePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISmokingYesNoDontcarePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "radioDiv";
                    this.mUISmokingYesNoDontcarePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"radioDiv\"";
                    this.mUISmokingYesNoDontcarePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "121";
                    this.mUISmokingYesNoDontcarePane.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUISmokingYesNoDontcarePane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUISmokingYesNoDontcarePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPostContentPane : HtmlDiv
    {
        
        public UIPostContentPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "postContent";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Date :  \r\n\r\nFrom Time :  \r\n\r\nTo Time :  ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"postContent\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "118";
            this.WindowTitles.Add("RideShare");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UIPostButton
        {
            get
            {
                if ((this.mUIPostButton == null))
                {
                    this.mUIPostButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIPostButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIPostButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIPostButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Post";
                    this.mUIPostButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUIPostButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIPostButton.FilterProperties[HtmlButton.PropertyNames.Class] = "publishPostButton btn";
                    this.mUIPostButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"publishPostButton btn\" onclick=\"p";
                    this.mUIPostButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "11";
                    this.mUIPostButton.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIPostButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUIPostButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPostContentLeftPane1 : HtmlDiv
    {
        
        public UIPostContentLeftPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "postContentLeft";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Source :  \r\n\r\nDestination :  \r\n\r\n\r\nSmoki";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"postContentLeft\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "127";
            this.WindowTitles.Add("RideShare");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UISmokingYesNoDontcarePane
        {
            get
            {
                if ((this.mUISmokingYesNoDontcarePane == null))
                {
                    this.mUISmokingYesNoDontcarePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUISmokingYesNoDontcarePane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUISmokingYesNoDontcarePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISmokingYesNoDontcarePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Smoking :  Yes   No   Dont care  \r\n\r\nBag";
                    this.mUISmokingYesNoDontcarePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISmokingYesNoDontcarePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "radioDiv";
                    this.mUISmokingYesNoDontcarePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"radioDiv\"";
                    this.mUISmokingYesNoDontcarePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "128";
                    this.mUISmokingYesNoDontcarePane.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUISmokingYesNoDontcarePane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUISmokingYesNoDontcarePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPostContentPane1 : HtmlDiv
    {
        
        public UIPostContentPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "postContent";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Date :  \r\n\r\nFrom Time :  \r\n\r\nTo Time :  ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"postContent\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "125";
            this.WindowTitles.Add("RideShare");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UIPostButton
        {
            get
            {
                if ((this.mUIPostButton == null))
                {
                    this.mUIPostButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIPostButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIPostButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIPostButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Post";
                    this.mUIPostButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUIPostButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIPostButton.FilterProperties[HtmlButton.PropertyNames.Class] = "publishPostButton btn";
                    this.mUIPostButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"publishPostButton btn\" onclick=\"p";
                    this.mUIPostButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "11";
                    this.mUIPostButton.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIPostButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUIPostButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPostContentPane2 : HtmlDiv
    {
        
        public UIPostContentPane2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "postContent";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Date :  \r\n\r\nFrom Time :  \r\n\r\nTo Time :  ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"postContent\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "128";
            this.WindowTitles.Add("RideShare");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UIPostButton
        {
            get
            {
                if ((this.mUIPostButton == null))
                {
                    this.mUIPostButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIPostButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIPostButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIPostButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Post";
                    this.mUIPostButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUIPostButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIPostButton.FilterProperties[HtmlButton.PropertyNames.Class] = "publishPostButton btn";
                    this.mUIPostButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"publishPostButton btn\" onclick=\"p";
                    this.mUIPostButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "11";
                    this.mUIPostButton.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIPostButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUIPostButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIPublishContentLeftPane : HtmlDiv
    {
        
        public UIPublishContentLeftPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "publishContentLeft";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Source :  \r\n\r\nDestination :  \r\n\r\nStopove";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"publishContentLeft\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "136";
            this.WindowTitles.Add("RideShare");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIDestinationPane
        {
            get
            {
                if ((this.mUIDestinationPane == null))
                {
                    this.mUIDestinationPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIDestinationPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIDestinationPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIDestinationPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Destination :";
                    this.mUIDestinationPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIDestinationPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "text";
                    this.mUIDestinationPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"text\"";
                    this.mUIDestinationPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "161";
                    this.mUIDestinationPane.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUIDestinationPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIDestinationPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRideShareWindowsInteTitleBar : WinTitleBar
    {
        
        public UIRideShareWindowsInteTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("RideShare");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITabRowTabList : WinTabList
    {
        
        public UITabRowTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTabList.PropertyNames.Name] = "Tab Row";
            this.WindowTitles.Add("RideShare");
            #endregion
        }
        
        #region Properties
        public WinButton UINewTabCtrlTButton
        {
            get
            {
                if ((this.mUINewTabCtrlTButton == null))
                {
                    this.mUINewTabCtrlTButton = new WinButton(this);
                    #region Search Criteria
                    this.mUINewTabCtrlTButton.SearchProperties[WinButton.PropertyNames.Name] = "New Tab (Ctrl+T)";
                    this.mUINewTabCtrlTButton.WindowTitles.Add("RideShare");
                    #endregion
                }
                return this.mUINewTabCtrlTButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUINewTabCtrlTButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAddressBarClient : WinClient
    {
        
        public UIAddressBarClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Address Bar";
            this.WindowTitles.Add("New Tab");
            #endregion
        }
        
        #region Properties
        public WinEdit UIAddressandsearchusinEdit
        {
            get
            {
                if ((this.mUIAddressandsearchusinEdit == null))
                {
                    this.mUIAddressandsearchusinEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIAddressandsearchusinEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Address and search using Google";
                    this.mUIAddressandsearchusinEdit.WindowTitles.Add("New Tab");
                    #endregion
                }
                return this.mUIAddressandsearchusinEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIAddressandsearchusinEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAddressComboControlToolBar : WinToolBar
    {
        
        public UIAddressComboControlToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Address Combo Control";
            this.WindowTitles.Add("New Tab");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIItemMenuItem
        {
            get
            {
                if ((this.mUIItemMenuItem == null))
                {
                    this.mUIItemMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIItemMenuItem.SearchProperties[WinMenuItem.PropertyNames.Instance] = "2";
                    this.mUIItemMenuItem.WindowTitles.Add("New Tab");
                    #endregion
                }
                return this.mUIItemMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIItemMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRunWindow : WinWindow
    {
        
        public UIRunWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Run";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Run");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "12298";
            this.WindowTitles.Add("Run");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIOpenComboBox
        {
            get
            {
                if ((this.mUIOpenComboBox == null))
                {
                    this.mUIOpenComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIOpenComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Open:";
                    this.mUIOpenComboBox.WindowTitles.Add("Run");
                    #endregion
                }
                return this.mUIOpenComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIOpenComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.WindowTitles.Add("Run");
            #endregion
        }
        
        #region Properties
        public WinEdit UIOpenEdit
        {
            get
            {
                if ((this.mUIOpenEdit == null))
                {
                    this.mUIOpenEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIOpenEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Open:";
                    this.mUIOpenEdit.WindowTitles.Add("Run");
                    #endregion
                }
                return this.mUIOpenEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIOpenEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIBlankPageWindowsInteWindow : BrowserWindow
    {
        
        public UIBlankPageWindowsInteWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Blank Page";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Blank Page");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIEditingCodedUITestsUWindow : WinWindow
    {
        
        public UIEditingCodedUITestsUWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Editing Coded UI Tests Using the Coded UI Test Editor - Google Chrome";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Chrome_WidgetWin_1";
            this.WindowTitles.Add("Editing Coded UI Tests Using the Coded UI Test Editor - Google Chrome");
            #endregion
        }
        
        #region Properties
        public UIChromeLegacyWindowWindow UIChromeLegacyWindowWindow
        {
            get
            {
                if ((this.mUIChromeLegacyWindowWindow == null))
                {
                    this.mUIChromeLegacyWindowWindow = new UIChromeLegacyWindowWindow(this);
                }
                return this.mUIChromeLegacyWindowWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIChromeLegacyWindowWindow mUIChromeLegacyWindowWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIChromeLegacyWindowWindow : WinWindow
    {
        
        public UIChromeLegacyWindowWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "283688488";
            this.WindowTitles.Add("Editing Coded UI Tests Using the Coded UI Test Editor - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinClient UIChromeLegacyWindowClient
        {
            get
            {
                if ((this.mUIChromeLegacyWindowClient == null))
                {
                    this.mUIChromeLegacyWindowClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIChromeLegacyWindowClient.SearchProperties[WinControl.PropertyNames.Name] = "Chrome Legacy Window";
                    this.mUIChromeLegacyWindowClient.WindowTitles.Add("Editing Coded UI Tests Using the Coded UI Test Editor - Google Chrome");
                    #endregion
                }
                return this.mUIChromeLegacyWindowClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIChromeLegacyWindowClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIInternetExplorerWindow : WinWindow
    {
        
        public UIInternetExplorerWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Internet Explorer";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Internet Explorer");
            #endregion
        }
        
        #region Properties
        public UIClosealltabsWindow UIClosealltabsWindow
        {
            get
            {
                if ((this.mUIClosealltabsWindow == null))
                {
                    this.mUIClosealltabsWindow = new UIClosealltabsWindow(this);
                }
                return this.mUIClosealltabsWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIClosealltabsWindow mUIClosealltabsWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIClosealltabsWindow : WinWindow
    {
        
        public UIClosealltabsWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "30980";
            this.WindowTitles.Add("Internet Explorer");
            #endregion
        }
        
        #region Properties
        public WinButton UIClosealltabsButton
        {
            get
            {
                if ((this.mUIClosealltabsButton == null))
                {
                    this.mUIClosealltabsButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIClosealltabsButton.SearchProperties[WinButton.PropertyNames.Name] = "Close all tabs";
                    this.mUIClosealltabsButton.WindowTitles.Add("Internet Explorer");
                    #endregion
                }
                return this.mUIClosealltabsButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIClosealltabsButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRideShareGoogleChromWindow : WinWindow
    {
        
        public UIRideShareGoogleChromWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "RideShare - Google Chrome";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Chrome_WidgetWin_1";
            this.WindowTitles.Add("RideShare - Google Chrome");
            #endregion
        }
        
        #region Properties
        public UIChromeLegacyWindowWindow1 UIChromeLegacyWindowWindow
        {
            get
            {
                if ((this.mUIChromeLegacyWindowWindow == null))
                {
                    this.mUIChromeLegacyWindowWindow = new UIChromeLegacyWindowWindow1(this);
                }
                return this.mUIChromeLegacyWindowWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIChromeLegacyWindowWindow1 mUIChromeLegacyWindowWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIChromeLegacyWindowWindow1 : WinWindow
    {
        
        public UIChromeLegacyWindowWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "229461280";
            this.WindowTitles.Add("RideShare - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinClient UIChromeLegacyWindowClient
        {
            get
            {
                if ((this.mUIChromeLegacyWindowClient == null))
                {
                    this.mUIChromeLegacyWindowClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIChromeLegacyWindowClient.SearchProperties[WinControl.PropertyNames.Name] = "Chrome Legacy Window";
                    this.mUIChromeLegacyWindowClient.WindowTitles.Add("RideShare - Google Chrome");
                    #endregion
                }
                return this.mUIChromeLegacyWindowClient;
            }
        }
        
        public WinControl UIRideShareGoogleChromDocument
        {
            get
            {
                if ((this.mUIRideShareGoogleChromDocument == null))
                {
                    this.mUIRideShareGoogleChromDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIRideShareGoogleChromDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIRideShareGoogleChromDocument.WindowTitles.Add("RideShare - Google Chrome");
                    #endregion
                }
                return this.mUIRideShareGoogleChromDocument;
            }
        }
        
        public WinControl UIChromeLegacyWindowDocument
        {
            get
            {
                if ((this.mUIChromeLegacyWindowDocument == null))
                {
                    this.mUIChromeLegacyWindowDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIChromeLegacyWindowDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIChromeLegacyWindowDocument.WindowTitles.Add("RideShare - Google Chrome");
                    #endregion
                }
                return this.mUIChromeLegacyWindowDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIChromeLegacyWindowClient;
        
        private WinControl mUIRideShareGoogleChromDocument;
        
        private WinControl mUIChromeLegacyWindowDocument;
        #endregion
    }
}
